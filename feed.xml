<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://zhihaol.eu.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://zhihaol.eu.org/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-11-05T22:17:38+00:00</updated><id>https://zhihaol.eu.org/feed.xml</id><title type="html">blank</title><subtitle>The way towards Geospatial Data Scientist </subtitle><entry xml:lang="eng"><title type="html">My thesis in a page</title><link href="https://zhihaol.eu.org/blog/2023/abstract/" rel="alternate" type="text/html" title="My thesis in a page"/><published>2023-05-12T00:00:00+00:00</published><updated>2023-05-12T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2023/abstract</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2023/abstract/"><![CDATA[]]></content><author><name>Zhihao</name></author><category term="climate"/><category term="geomatics"/><category term="remote_sensing"/><category term="machine_learning"/><category term="links"/><summary type="html"><![CDATA[Advancements in Snow Depth Retrieval Using Satellite Altimetry and Machine Learning]]></summary></entry><entry xml:lang="eng"><title type="html">My Poster at LATICE 2023</title><link href="https://zhihaol.eu.org/blog/2023/LATICE2023/" rel="alternate" type="text/html" title="My Poster at LATICE 2023"/><published>2023-03-26T00:00:00+00:00</published><updated>2023-03-26T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2023/LATICE2023</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2023/LATICE2023/"><![CDATA[]]></content><author><name>Zhihao</name></author><category term="climate"/><category term="datascience"/><category term="links"/><summary type="html"><![CDATA[Snow Depth from Satellite Laser Altimetry - Co-registration, Bias Correction, and Statistical Downscaling]]></summary></entry><entry xml:lang="eng"><title type="html">My talk at SDG 2023</title><link href="https://zhihaol.eu.org/blog/2023/SDG2023/" rel="alternate" type="text/html" title="My talk at SDG 2023"/><published>2023-02-07T00:00:00+00:00</published><updated>2023-02-07T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2023/SDG2023</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2023/SDG2023/"><![CDATA[]]></content><author><name>Zhihao</name></author><category term="sustainable"/><category term="climate"/><category term="links"/><summary type="html"><![CDATA[The scerets behind the snow depth]]></summary></entry><entry xml:lang="eng"><title type="html">NuthKaab Coreg vs Gradient Descent Coreg</title><link href="https://zhihaol.eu.org/blog/2023/GradientDescendingCoreg/" rel="alternate" type="text/html" title="NuthKaab Coreg vs Gradient Descent Coreg"/><published>2023-01-02T00:00:00+00:00</published><updated>2023-01-02T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2023/GradientDescendingCoreg</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2023/GradientDescendingCoreg/"><![CDATA[<p>DEM coregistration is an important step in improving the quality of a DEM by eliminating horizontal shift and vertical bias. However, it can be time-consuming, particularly for large datasets and global applications such as the SNOWDEPTH project.</p> <p>In the past few months, I have found that the implementation of NuthKaab coregistration in xDEM is not fast enough for ICESat-2 datasets. As a result, I have developed a new method called ‘Gradient descent Coregistration,’ which works similarly to ICP (Iterative Closest Point) but is significantly faster. I am eager to receive professional input to make this method more robust and useful for others.</p> <p>The purpose of this section is:</p> <ul> <li>to compare the performance of NuthKaab coregistration and ‘Gradient descent Coregistration’ on ICESat-2 datasets.</li> <li>In addition, I will consider the possibility of extending ‘Gradient descent Coregistration’ to other scenarios beyond ICESat-2 point coregistration.</li> <li>Finally, I will explore the footprint problem: should I treat the point measurements of ICESat-2 as a footprint (zonal statistics) or using point interpolation.</li> </ul> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">geopandas</span> <span class="k">as</span> <span class="n">gpd</span>
<span class="kn">import</span> <span class="n">xdem</span>
<span class="kn">import</span> <span class="n">xdem_pt</span>
<span class="kn">import</span> <span class="n">importlib</span>
<span class="kn">import</span> <span class="n">pyproj</span>
<span class="kn">from</span> <span class="n">xsnow.godh</span> <span class="kn">import</span> <span class="n">load_gdf</span><span class="p">,</span><span class="n">best_shift_px</span><span class="p">,</span><span class="n">get_dh_by_shift_px_gdf</span><span class="p">,</span><span class="n">get_dh_by_shift_px_dem</span><span class="p">,</span><span class="n">get_dh_dem</span><span class="p">,</span><span class="n">dem_difference_plot</span><span class="p">,</span> <span class="n">best_footprint</span><span class="p">,</span><span class="n">get_dh_by_footprint</span>
<span class="kn">from</span> <span class="n">xsnow.misc</span> <span class="kn">import</span> <span class="n">df_from_dem</span>
<span class="kn">from</span> <span class="n">xsnow.goplot</span> <span class="kn">import</span> <span class="n">final_histogram</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Loading the dataset.
</span>
<span class="c1"># 1 ICESat-2 snow free measurements.
</span><span class="n">sf_gdf</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">snow_free_land_gdf.csv</span><span class="sh">'</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="sh">'</span><span class="se">\t</span><span class="sh">'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 2 DTM 10 exmaple (10 m Norway DTM-10)
</span><span class="n">fid_dtm10</span> <span class="o">=</span> <span class="sa">r</span><span class="sh">'</span><span class="s">\\hypatia.uio.no\lh-mn-geofag-felles\projects\snowdepth\data\DEM\Norway\DTM10_UTM33\6603_3_10m_z33.tif</span><span class="sh">'</span>
<span class="n">dtm_10_</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="n">fid_dtm10</span><span class="p">).</span><span class="nf">reproject</span><span class="p">(</span><span class="n">dst_crs</span><span class="o">=</span><span class="n">pyproj</span><span class="p">.</span><span class="nc">CRS</span><span class="p">(</span><span class="mi">32633</span><span class="p">),</span><span class="n">dst_res</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
<span class="n">dtm_10</span> <span class="o">=</span> <span class="n">dtm_10_</span> <span class="o">+</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="sh">'</span><span class="s">no_kv_HREF2018B_NN2000_EUREF89.tif</span><span class="sh">'</span><span class="p">).</span><span class="nf">reproject</span><span class="p">(</span><span class="n">dtm_10_</span><span class="p">,</span><span class="n">resampling</span><span class="o">=</span><span class="sh">'</span><span class="s">bilinear</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 3 DTM 1 exmaple (1 m Norway DTM-1)
</span><span class="n">fid_dtm1</span> <span class="o">=</span> <span class="sa">r</span><span class="sh">'</span><span class="s">\\hypatia.uio.no\lh-mn-geofag-felles\projects\snowdepth\data\DEM\Norway\DTM1_11-11_UTM33\33-112-114.tif</span><span class="sh">'</span>
<span class="n">dtm_1_</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="n">fid_dtm1</span><span class="p">).</span><span class="nf">reproject</span><span class="p">(</span><span class="n">dst_crs</span><span class="o">=</span><span class="n">pyproj</span><span class="p">.</span><span class="nc">CRS</span><span class="p">(</span><span class="mi">32633</span><span class="p">),</span><span class="n">dst_res</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
<span class="n">dtm_1</span> <span class="o">=</span> <span class="n">dtm_1_</span> <span class="o">+</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="sh">'</span><span class="s">no_kv_HREF2018B_NN2000_EUREF89.tif</span><span class="sh">'</span><span class="p">).</span><span class="nf">reproject</span><span class="p">(</span><span class="n">dtm_1_</span><span class="p">,</span><span class="n">resampling</span><span class="o">=</span><span class="sh">'</span><span class="s">bilinear</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># subset snow free measurements
</span><span class="kn">from</span> <span class="n">xsnow.godh</span> <span class="kn">import</span> <span class="n">load_gdf</span>
<span class="n">sf_subset_dtm10</span> <span class="o">=</span> <span class="nf">load_gdf</span><span class="p">(</span><span class="n">sf_gdf</span><span class="p">,</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">)</span>
<span class="n">sf_subset_dtm1</span> <span class="o">=</span> <span class="nf">load_gdf</span><span class="p">(</span><span class="n">sf_gdf</span><span class="p">,</span><span class="n">dtm_1</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">The length of sf_subset_dtm10: </span><span class="si">{</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_subset_dtm10</span><span class="p">)</span><span class="si">}</span><span class="s"> points</span><span class="sh">'</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">The length of sf_subset_dtm1: </span><span class="si">{</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_subset_dtm1</span><span class="p">)</span><span class="si">}</span><span class="s"> points</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The length of sf_subset_dtm10: 20291 points
The length of sf_subset_dtm1: 1113 points
</code></pre></div></div> <h3 id="the-main-challenges-of-applying-nuthkaab-coreg-on-icesat-2">The main challenges of applying NuthKaab coreg on ICESat-2</h3> <p>NuthKaab estimates the ‘shift matrix’ iteratively by solving a cosine equation that models the direction in which the DEM is most likely offset.</p> <ul> <li>(1) However, this process requires the calculation of ‘slope’, ‘aspect’, and ‘curvature’, which can be time-consuming and resource-intensive, especially if the DEM has a fine resolution. In fact, the computational cost of NuthKaab coregistration grows exponentially as the resolution of the DEM increases.</li> <li>(2) In addition, NuthKaab is a statistical method that requires a large sample of points (e.g. at least 1000-2000) to work accurately. If there are too few points available in the ICESat-2 dataset (which is often the case with fine DEMs), NuthKaab may not work properly or may produce incorrect results.</li> </ul> <p>Below, I have provided three examples to illustrate these challenges.</p> <ul> <li>(a) NuthKaab coregistration works well on a normal DEM with sufficient points.</li> <li>(b) NuthKaab takes longer and produces incorrect results on a fine DEM with fewer points.</li> <li>(c) NuthKaab fails completely when there are not enough points (e.g. less than 500).</li> </ul> <h4 id="nuthkaab-coreg">NuthKaab Coreg</h4> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>

<span class="c1"># (a) NuthKaab Coreg examples of DTM10. It works well on normal DEMs.
</span><span class="n">results_nk_10</span> <span class="o">=</span> <span class="nf">get_dh_dem</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_subset_dtm10</span><span class="p">,</span><span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.75</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">mask_highcurv</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">verbose</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
CPU times: total: 35.3 s
Wall time: 35.3 s
</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_4_1.png" alt="png" class="center-image"/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>

<span class="c1"># NuthKaab example on DTM1, it consumes more time on DTM1, and bad coreg due to sample size.
</span><span class="n">result_nk_1</span> <span class="o">=</span> <span class="nf">get_dh_dem</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span> <span class="n">sf_subset_dtm1</span><span class="p">,</span><span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.75</span><span class="p">,</span><span class="n">order</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">mask_highcurv</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">verbose</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="c1"># The STD, RMSE, NMAD do not improve after NuthKaab Coreg.
# Even the bias is not relieable becasue the samll sample size.
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
CPU times: total: 5min 58s
Wall time: 5min 58s
</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_5_1.png" alt="png" class="center-image"/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>
<span class="c1"># NuthKaab fail due to sample size. Here I downsampling to 500 points.
</span>
<span class="n">result</span> <span class="o">=</span> <span class="nf">get_dh_dem</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span> <span class="n">sf_subset_dtm1</span><span class="p">.</span><span class="nf">sample</span><span class="p">(</span><span class="n">frac</span><span class="o">=</span><span class="mi">500</span><span class="o">/</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_subset_dtm1</span><span class="p">)),</span> <span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span> <span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">order</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">mask_highcurv</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running Nuth and Kääb (2011) coregistration.
   Calculate slope and aspect
   Statistics on initial dh:
      Median = -0.117 - NMAD = 0.795
   Iteratively estimating horizontal shit:

   Progress:   0%|          | 0/10 [00:00&lt;?, ?it/s]


---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

File &lt;timed exec&gt;:3, in &lt;module&gt;


ValueError: Less than 10 different cells exist.
</code></pre></div></div> <h4 id="gradient-descent-coreg">Gradient descent Coreg</h4> <p>Gradient descent is an optimization algorithm commonly used in machine learning and data science to find the minimum of a function. It works by iteratively adjusting the parameters of the function in the direction that minimizes the output value. Here the values are the offset of the DEM, or the ‘shift matrix’.</p> <p>It works like going down from the top of the mountain.</p> <ul> <li>Check the surrounding.</li> <li>Calculate the slope (gradient) on each direction. Here the elevation is the loss function.</li> <li>Do adjustment (going downhill) according to your pace (learning rate).</li> <li>Iterate.</li> <li>Reach the minimum of a function.</li> </ul> <p>We run three examples again by Gradient descent Coreg, <strong>being mind of the time.</strong></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>

<span class="c1"># (a) DTM 10.
</span><span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Comparision on DTM10</span><span class="sh">'</span><span class="p">)</span>

<span class="c1">## gradient descent coreg
</span><span class="n">results_10</span> <span class="o">=</span> <span class="nf">best_shift_px</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_subset_dtm10</span><span class="p">,</span><span class="n">disp</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="sh">'</span><span class="s">mix</span><span class="sh">'</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">99</span><span class="p">,</span><span class="n">downsampling</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="c1">## get dh using parameters from gradient descent coreg
</span><span class="n">pts_10</span> <span class="o">=</span> <span class="nf">get_dh_by_shift_px_gdf</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_subset_dtm10</span><span class="p">,(</span><span class="n">results_10</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">results_10</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="n">results_10</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="n">stat</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="c1">## plot
</span><span class="nf">final_histogram</span><span class="p">(</span><span class="n">results_nk_10</span><span class="p">[</span><span class="sh">'</span><span class="s">gdf</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">dh_after</span><span class="sh">'</span><span class="p">],</span><span class="n">pts_10</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">dH_ref</span><span class="o">=</span><span class="n">results_nk_10</span><span class="p">[</span><span class="sh">'</span><span class="s">gdf</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">dh_before</span><span class="sh">'</span><span class="p">],</span><span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.5</span><span class="p">,</span><span class="n">legend</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">NuthKaab Coreg</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">Gradient descent Coreg</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">raw</span><span class="sh">'</span><span class="p">]);</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">NuthKaab Coreg fit matrix(e_px,n_px,bias),nmad:</span><span class="sh">'</span><span class="p">,</span><span class="n">results_nk_10</span><span class="p">[</span><span class="sh">'</span><span class="s">shift_matrix</span><span class="sh">'</span><span class="p">],</span><span class="n">results_nk_10</span><span class="p">[</span><span class="sh">'</span><span class="s">sum</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">nmad_after</span><span class="sh">'</span><span class="p">])</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Comparision on DTM10
Gradient descent Coreg fit matrix(e_px,n_px,bias),nmad:(-0.5000,0.3906,0.1385),0.3243
NuthKaab Coreg fit matrix(e_px,n_px,bias),nmad: (-0.47167920355557263, 0.3644381456590511, 0.137939453125) 0.32735018920898434
CPU times: total: 9.84 s
Wall time: 9.84 s
</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_8_1.png" alt="png" class="center-image"/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>

<span class="c1"># (b) DTM 1
</span><span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Comparision on DTM1</span><span class="sh">'</span><span class="p">)</span>
<span class="c1">## gradient descent coreg
</span><span class="n">results_1</span> <span class="o">=</span> <span class="nf">best_shift_px</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span><span class="n">sf_subset_dtm1</span><span class="p">,</span><span class="n">disp</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="sh">'</span><span class="s">mix</span><span class="sh">'</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.5</span><span class="p">)</span>

<span class="c1">## using parameters from gradient descent coreg. No bias correction.
</span><span class="n">pts_1</span> <span class="o">=</span> <span class="nf">get_dh_by_shift_px_gdf</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span><span class="n">sf_subset_dtm1</span><span class="p">,(</span><span class="n">results_1</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">results_1</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="mi">0</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="c1">## plot in comparison with NuthKaab Coreg
</span><span class="nf">final_histogram</span><span class="p">(</span><span class="n">result_nk_1</span><span class="p">[</span><span class="sh">'</span><span class="s">gdf</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">dh_after</span><span class="sh">'</span><span class="p">]</span><span class="o">+</span><span class="n">results_1</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="n">pts_1</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">dH_ref</span><span class="o">=</span><span class="n">result_nk_1</span><span class="p">[</span><span class="sh">'</span><span class="s">gdf</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">dh_before</span><span class="sh">'</span><span class="p">],</span><span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">bins</span><span class="o">=</span><span class="mi">60</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.5</span><span class="p">,</span><span class="n">legend</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">NuthKaab Coreg</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">Gradient descent Coreg</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">raw</span><span class="sh">'</span><span class="p">]);</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">NuthKaab Coreg fit matrix(e_px,n_px,bias),nmad:</span><span class="sh">'</span><span class="p">,</span><span class="n">result_nk_1</span><span class="p">[</span><span class="sh">'</span><span class="s">shift_matrix</span><span class="sh">'</span><span class="p">],</span><span class="n">result_nk_1</span><span class="p">[</span><span class="sh">'</span><span class="s">sum</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">nmad_after</span><span class="sh">'</span><span class="p">])</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Comparision on DTM1
Gradient descent Coreg fit matrix(e_px,n_px,bias),nmad:(-0.8750,-1.2284,-0.1682),0.7210
NuthKaab Coreg fit matrix(e_px,n_px,bias),nmad: (-0.3431186328204423, -1.0512761859101158, -0.169189453125) 0.7765913818359375
CPU times: total: 641 ms
Wall time: 626 ms
</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_9_1.png" alt="png" class="center-image"/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>

<span class="c1"># (c) DTM 1 with only 500 points
</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Comparision on DTM1 - 500 points challenge</span><span class="sh">'</span><span class="p">)</span>
<span class="c1">## gradient descent coreg
</span><span class="n">results_500</span> <span class="o">=</span> <span class="nf">best_shift_px</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span><span class="n">sf_subset_dtm1</span><span class="p">.</span><span class="nf">sample</span><span class="p">(</span><span class="n">frac</span><span class="o">=</span><span class="mi">1000</span><span class="o">/</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_subset_dtm1</span><span class="p">)),</span><span class="n">disp</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="sh">'</span><span class="s">mix</span><span class="sh">'</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">99</span><span class="p">)</span>

<span class="c1">## get dh using parameters from gradient descent coreg
</span><span class="n">pts_500</span> <span class="o">=</span> <span class="nf">get_dh_by_shift_px_gdf</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span><span class="n">sf_subset_dtm1</span><span class="p">,(</span><span class="n">results_500</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">results_500</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="mi">0</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="c1">## plot in comparison with (b)
</span><span class="nf">final_histogram</span><span class="p">(</span><span class="n">pts_1</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">pts_500</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">dH_ref</span><span class="o">=</span><span class="n">result_nk_1</span><span class="p">[</span><span class="sh">'</span><span class="s">gdf</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">dh_before</span><span class="sh">'</span><span class="p">],</span><span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">bins</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.5</span><span class="p">,</span><span class="n">legend</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">GD Coreg</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">GD Coreg (500 pts)</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">raw</span><span class="sh">'</span><span class="p">]);</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">NuthKaab Coreg fit matrix(e_px,n_px,bias),nmad: Fail to coreg</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Comparision on DTM1 - 500 points challenge
Gradient descent Coreg fit matrix(e_px,n_px,bias),nmad:(-1.0000,-0.2374,-0.1486),0.7371
NuthKaab Coreg fit matrix(e_px,n_px,bias),nmad: Fail to coreg
CPU times: total: 781 ms
Wall time: 779 ms
</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_10_1.png" alt="png" class="center-image"/></p> <h4 id="section-summary">Section summary</h4> <p>‘Gradient descent Coregistration’ is a point-based coregistration method that <strong>is significantly fast (in seconds) and efficient regardless of the resolution of the DEM</strong>. It is also able to handle datasets with a small number of points, unlike NuthKaab coregistration which requires a large sample size to work accurately.</p> <p>In addition to using NMAD, my ‘Gradient descent Coregistration’ method <strong>also incorporates RMSE to make the coregistration process more ‘sensitive’ to ‘shifts’. In contrast, xDEM only uses NMAD,</strong> which may not always give the optimal offset but explained the difference in previous examples.</p> <ul> <li>However, it is important to carefully choose the hyperparameters, particularly the learning rate, to ensure that the algorithm can find the global minimum of the function.</li> <li>It is also worth noting that the results of ‘Gradient descent Coregistration’ may vary depending on the local minima reached, particularly when sample size are less than 1000 points.</li> <li>Finally, for datasets with a very large number of points (e.g. over 50000), I recommend using NuthKaab coregistration, which is very robust in these scenarios.</li> </ul> <h2 id="not-just-icesat-2">Not just ICESat-2</h2> <p>In addition to being effective for co-registering DEMs with points, <strong>‘Gradient descent Coregistration’ also performs well for normal DEM coregistration.</strong></p> <p>To compare the speed and accuracy, we will use two different datasets: (1) a known shifted DTM10, and (2) Arctic DEM and DTM1.</p> <ul> <li>(a) xdem.NuthKaab</li> <li>(b) Gradient descent Coreg</li> </ul> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">xsnow.godh</span> <span class="kn">import</span> <span class="n">dem_difference_plot</span>
<span class="kn">from</span> <span class="n">xsnow.misc</span> <span class="kn">import</span> <span class="n">dem_shift</span>
<span class="kn">import</span> <span class="n">xdem</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Shift a DTM10 (1.2,-0.7) px and 0.16 m on purpose
</span><span class="n">dtm_10_shifted</span> <span class="o">=</span> <span class="nf">dem_shift</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="mf">1.2</span><span class="p">,</span><span class="o">-</span><span class="mf">0.7</span><span class="p">,</span><span class="mf">0.16</span><span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Plot. dh resembles to terrain.
</span><span class="n">ddem</span> <span class="o">=</span> <span class="n">dtm_10_shifted</span> <span class="o">-</span> <span class="n">dtm_10</span>
<span class="n">ddem</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">vmin</span><span class="o">=-</span><span class="mi">10</span><span class="p">,</span><span class="n">vmax</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_21_0.png" alt="png" class="center-image"/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>

<span class="c1"># a. NuthKaab Coreg on DEM and shifted DEM
</span>
<span class="n">func</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="n">coreg</span><span class="p">.</span><span class="nc">NuthKaab</span><span class="p">()</span>
<span class="n">func</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">dtm_10_shifted</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">Coreg maxtrix east_px, north_px, bias:</span><span class="si">{</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">offset_east_px</span><span class="sh">"</span><span class="p">]</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">offset_north_px</span><span class="sh">"</span><span class="p">]</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">bias</span><span class="sh">"</span><span class="p">]</span><span class="si">:</span><span class="p">.</span><span class="mi">3</span><span class="n">f</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Coreg maxtrix east_px, north_px, bias:-1.2199,0.7108,-0.160
CPU times: total: 1min
Wall time: 1min
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>
<span class="c1"># b. Gradient descent Coreg on DEM and shifted DEM
</span>
<span class="c1"># sampling points from DEM
</span><span class="n">df</span> <span class="o">=</span> <span class="nf">df_from_dem</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">samples</span><span class="o">=</span><span class="mi">5000</span><span class="p">)</span>

<span class="c1"># runing gradient descening coreg on sampling points
</span><span class="nf">best_shift_px</span><span class="p">(</span><span class="n">dtm_10_shifted</span><span class="p">,</span><span class="n">df</span><span class="p">,</span><span class="n">x0</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="n">footprint</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">bounds</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">z</span><span class="sh">'</span><span class="p">,</span><span class="n">disp</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="sh">'</span><span class="s">nmad</span><span class="sh">'</span><span class="p">,</span><span class="n">downsampling</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Gradient descent Coreg fit matrix(e_px,n_px,bias),nmad:(-1.1935,0.7031,-0.1600),0.0691
CPU times: total: 1.12 s
Wall time: 1.09 s


(-1.1935, 0.703125, -0.16000366, 0.06911228942871094)
</code></pre></div></div> <p>The examples indicate that time reducing <strong>from 1 minutes to 1 seconds!</strong> It could be from 14 minutes to 5 seconds. Now lets looks at some real datasets. Co-registering <strong>Arctic DEM and DTM1</strong>.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## DTM1 
</span><span class="n">fid_dtm1</span> <span class="o">=</span> <span class="sa">r</span><span class="sh">'</span><span class="s">\\hypatia.uio.no\lh-mn-geofag-felles\projects\snowdepth\data\DEM\Norway\DTM1_11-11_UTM33\33-113-119.tif</span><span class="sh">'</span>
<span class="n">dtm1</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="n">fid_dtm1</span><span class="p">).</span><span class="nf">reproject</span><span class="p">(</span><span class="n">dst_crs</span><span class="o">=</span><span class="n">pyproj</span><span class="p">.</span><span class="nc">CRS</span><span class="p">(</span><span class="mi">32633</span><span class="p">),</span><span class="n">dst_res</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>

<span class="n">grid_nn2000</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="sh">'</span><span class="s">no_kv_HREF2018B_NN2000_EUREF89.tif</span><span class="sh">'</span><span class="p">)</span>
<span class="n">dtm_1_ref</span> <span class="o">=</span> <span class="n">dtm1</span> <span class="o">+</span> <span class="n">grid_nn2000</span><span class="p">.</span><span class="nf">reproject</span><span class="p">(</span><span class="n">dtm1</span><span class="p">,</span><span class="n">resampling</span><span class="o">=</span><span class="sh">'</span><span class="s">bilinear</span><span class="sh">'</span><span class="p">)</span>

<span class="c1">## Arctic DEM and reproject to DTM1
</span><span class="n">fid_arctic</span> <span class="o">=</span> <span class="sa">r</span><span class="sh">'</span><span class="s">\\hypatia.uio.no\lh-mn-geofag-felles\projects\snowdepth\data\DEM\Norway\ArcticDEM\21_67_1_1_2m_v3.0\21_67_1_1_2m_v3.0_reg_dem.tif</span><span class="sh">'</span>
<span class="n">dtm_arctic</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="n">fid_arctic</span><span class="p">).</span><span class="nf">reproject</span><span class="p">(</span><span class="n">dtm1</span><span class="p">)</span>

</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>

<span class="c1"># a. NuthKaab Coreg. Work on 1m resolution.
</span>
<span class="n">func</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="n">coreg</span><span class="p">.</span><span class="nc">NuthKaab</span><span class="p">()</span>
<span class="n">func</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">dtm_1_ref</span><span class="p">,</span><span class="n">dtm_arctic</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">Coreg maxtrix east_px, north_px, bias:</span><span class="si">{</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">offset_east_px</span><span class="sh">"</span><span class="p">]</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">offset_north_px</span><span class="sh">"</span><span class="p">]</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">bias</span><span class="sh">"</span><span class="p">]</span><span class="si">:</span><span class="p">.</span><span class="mi">3</span><span class="n">f</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Coreg maxtrix east_px, north_px, bias:5.1641,-4.1300,-0.555
CPU times: total: 14min 4s
Wall time: 14min 4s
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%%</span><span class="n">time</span>
<span class="c1"># b. Gradient descent Coreg. Work on 1m resolution.
</span>
<span class="c1"># sampling points from DEM_Ref
</span><span class="n">df_ref</span> <span class="o">=</span> <span class="nf">df_from_dem</span><span class="p">(</span><span class="n">dtm_1_ref</span><span class="p">,</span><span class="n">samples</span><span class="o">=</span><span class="mi">10000</span><span class="p">)</span>

<span class="c1"># runing gradient descening coreg on sampling points
</span><span class="n">res_gd</span> <span class="o">=</span><span class="nf">best_shift_px</span><span class="p">(</span><span class="n">dtm_arctic</span><span class="p">,</span><span class="n">df_ref</span><span class="p">,</span><span class="n">x0</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="n">footprint</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">bounds</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">),</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">z</span><span class="sh">'</span><span class="p">,</span><span class="n">disp</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="sh">'</span><span class="s">mix</span><span class="sh">'</span><span class="p">,</span><span class="n">downsampling</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">99</span><span class="p">)</span>

</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Gradient descent Coreg fit matrix(e_px,n_px,bias),nmad:(2.7500,-3.4922,-0.5269),0.9925
CPU times: total: 5.25 s
Wall time: 5.25 s
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="c1"># ddem
</span><span class="n">ddem_raw</span> <span class="o">=</span> <span class="n">dtm_arctic</span> <span class="o">-</span> <span class="n">dtm_1_ref</span>
<span class="n">ddem_coreg_nuthkaab</span> <span class="o">=</span> <span class="nf">dem_shift</span><span class="p">(</span><span class="n">dtm_arctic</span><span class="p">,</span><span class="mf">5.1641</span><span class="p">,</span><span class="o">-</span><span class="mf">4.13</span><span class="p">,</span><span class="o">-</span><span class="mf">0.555</span><span class="p">)</span> <span class="o">-</span> <span class="n">dtm_1_ref</span>
<span class="n">ddem_coreg_gd</span> <span class="o">=</span> <span class="nf">dem_shift</span><span class="p">(</span><span class="n">dtm_arctic</span><span class="p">,</span><span class="mf">2.7500</span><span class="p">,</span><span class="o">-</span><span class="mf">3.4922</span><span class="p">,</span><span class="o">-</span><span class="mf">0.5269</span><span class="p">)</span> <span class="o">-</span> <span class="n">dtm_1_ref</span>

<span class="c1"># plot
</span><span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="n">ax1</span><span class="p">,</span><span class="n">ax2</span><span class="p">,</span><span class="n">ax3</span><span class="p">)</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
    
<span class="n">ddem_coreg_nuthkaab</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="n">vmin</span><span class="o">=-</span><span class="mi">2</span><span class="p">,</span><span class="n">cb_title</span><span class="o">=</span><span class="sh">'</span><span class="s">dH (m)</span><span class="sh">'</span><span class="p">)</span>
<span class="n">ddem_coreg_gd</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="n">vmin</span><span class="o">=-</span><span class="mi">2</span><span class="p">)</span>

<span class="n">ax1</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="sh">'</span><span class="s">dH (coreg_nuthkaab)</span><span class="sh">'</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="sh">'</span><span class="s">dH (coreg_gradient_descent)</span><span class="sh">'</span><span class="p">)</span>
<span class="nf">final_histogram</span><span class="p">(</span><span class="n">ddem_coreg_nuthkaab</span><span class="p">,</span><span class="n">ddem_coreg_gd</span><span class="p">,</span><span class="n">dH_ref</span><span class="o">=</span><span class="n">ddem_raw</span><span class="p">,</span><span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">6</span><span class="p">,</span><span class="mi">6</span><span class="p">),</span><span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">,</span><span class="n">legend</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">NuthKaab</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">Gradientdescent</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">raw</span><span class="sh">'</span><span class="p">])</span>
</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_28_1.png" alt="png" class="center-image"/></p> <h4 id="section-summary-1">Section Summary</h4> <p>Arctic DEM in this area (close to Finse) is a snow-on DEM. So, there is no reason to do bias correction e.g. -0.555 m or -0.5269 m (This is snow depth over the entire area acrtually). For the same reason, snow cover introduce errors that make it challenging to obtain reliable co-registration results. In this competition.</p> <ul> <li>NuthKaab give a shift matrix (5.1641,-4.13) with NMAD 1.03 m in 14 minutes</li> <li>Gradiant descent Corg give a shift matrix (2.7500,-3.4922) with NMAD 1.01 m in just 5 seconds.</li> </ul> <p>Based on these results, we conclude that ‘Gradient descent Coregistration’ is the superior method in all scenarios. Additionally, ‘Gradient descent Coregistration’ can easily support rotation correction, making it even more versatile.</p> <h2 id="point-interpolation-vs-zonal-statistics-of-the-footprint">Point interpolation vs Zonal statistics of the footprint</h2> <p>When picking up a value at a point on a DEM, the value may not match the grid exactly and instead is an <strong>interpolated value</strong>.</p> <p>In xDEM, interpolation is implemented using scipy.ndimapge.map_coordinates, which supports nearest, bilinear, and bicubic interpolation. Bicubic interpolation is sometimes better than bilinear interpolation, but this is not always the case.</p> <p>Another option for evaluating the value at a point on a DEM is to use <strong>zonal statistics</strong>, which calculates a statistic (e.g. mean, median, etc.) for the area surrounding the point. This can be particularly useful for high-resolution DEMs, where the statistic value of the footprint may provide a more accurate representation of the true value because the statistics removed the noisy spikes.</p> <p><strong>So, What is the best footprint size for zonal statistics? Again, I used gradient descent to find it!</strong></p> <p>I will use DTM1 and ICESat-2 snow-free measurements as an example to demonstrate the difference of two methods.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># The footprint of ICESat-2 is about 13 m by 13 m.
</span><span class="n">pts_size</span> <span class="o">=</span> <span class="nf">get_dh_by_footprint</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span> <span class="n">sf_subset_dtm1</span><span class="p">,(</span><span class="mi">13</span><span class="p">,</span><span class="mi">13</span><span class="p">),</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">,</span><span class="n">s_name</span><span class="o">=</span><span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.75</span><span class="p">)</span>

<span class="c1">## plot
</span><span class="nf">final_histogram</span><span class="p">(</span><span class="n">pts_1</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">pts_size</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">dH_ref</span><span class="o">=</span><span class="n">result_nk_1</span><span class="p">[</span><span class="sh">'</span><span class="s">gdf</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">dh_before</span><span class="sh">'</span><span class="p">],</span><span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.75</span><span class="p">,</span><span class="n">legend</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">GD Coreg</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">footprint 13*13</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">raw</span><span class="sh">'</span><span class="p">]);</span>

</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_13_0.png" alt="png" class="center-image"/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Gradient descent suggest the better size
</span><span class="n">size</span> <span class="o">=</span> <span class="nf">best_footprint</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span> <span class="n">sf_subset_dtm1</span><span class="p">,(</span><span class="mi">13</span><span class="p">,</span><span class="mi">13</span><span class="p">),</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">,</span><span class="n">s_name</span><span class="o">=</span><span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="sh">'</span><span class="s">mix</span><span class="sh">'</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.75</span><span class="p">)</span>

</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>the best fit footprint(width,length): (8.0000,25.1250)
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Use the 'best' size to get elevation difference
</span><span class="n">pts_size</span> <span class="o">=</span> <span class="nf">get_dh_by_footprint</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span> <span class="n">sf_subset_dtm1</span><span class="p">,(</span><span class="mi">8</span><span class="p">,</span><span class="mf">25.125</span><span class="p">),</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">,</span><span class="n">s_name</span><span class="o">=</span><span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.75</span><span class="p">)</span>

<span class="c1">## plot
</span><span class="nf">final_histogram</span><span class="p">(</span><span class="n">pts_1</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">pts_size</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">dH_ref</span><span class="o">=</span><span class="n">result_nk_1</span><span class="p">[</span><span class="sh">'</span><span class="s">gdf</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">dh_before</span><span class="sh">'</span><span class="p">],</span><span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.75</span><span class="p">,</span><span class="n">legend</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">GD Coreg</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">footprint 8*25</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">raw</span><span class="sh">'</span><span class="p">]);</span>

</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_15_0.png" alt="png" class="center-image"/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Use the size to get elevation difference
</span><span class="n">pts_13100</span> <span class="o">=</span> <span class="nf">get_dh_by_footprint</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span> <span class="n">sf_subset_dtm1</span><span class="p">,(</span><span class="mi">13</span><span class="p">,</span><span class="mi">100</span><span class="p">),</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">,</span><span class="n">s_name</span><span class="o">=</span><span class="sh">'</span><span class="s">mean</span><span class="sh">'</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.75</span><span class="p">)</span>

<span class="c1">## plot
</span><span class="nf">final_histogram</span><span class="p">(</span><span class="n">pts_13100</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">pts_size</span><span class="p">[</span><span class="sh">'</span><span class="s">dh</span><span class="sh">'</span><span class="p">],</span><span class="n">dH_ref</span><span class="o">=</span><span class="n">result_nk_1</span><span class="p">[</span><span class="sh">'</span><span class="s">gdf</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">dh_before</span><span class="sh">'</span><span class="p">],</span><span class="nb">range</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">perc_t</span><span class="o">=</span><span class="mf">99.75</span><span class="p">,</span><span class="n">legend</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">footprint 13*100</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">footprint 8*25</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">raw</span><span class="sh">'</span><span class="p">]);</span>

</code></pre></div></div> <p><img src="https://zhihaol.eu.org/assets/img/notebook/2023-01-05-GradientdescentCoreg/2023-01-05-GradientdescentCoreg_16_0.png" alt="png" class="center-image"/></p> <h4 id="section-summary-2">Section Summary</h4> <p>It is controversial to decide which one to use, point interpolation (with coreg) <strong>or</strong> footprint zonal statistics. So far we have matched ICESat-2 ‘s h_te_bestfit with values from:</p> <ul> <li>interpolation (and coreg) with NMAD 0.72 m.</li> <li>foorprint 13x13 m with NMAD 0.75 m (the footprint size naturally)</li> <li>foorprint 8x25 m with NMAD 0.67 m (the best footprint suggest by gradient descent algorithm)</li> <li>foorprint 13x100 m with NMAD 1.20 m (the footprint size of ATL08 segment)</li> </ul> <p>However, the results are hard to be reliable due to the small sample size. But gradient descent is very useful for applications on DEM or ICESat-2 dataset.</p>]]></content><author><name>Zhihao</name></author><category term="geodata"/><category term="datascience"/><category term="notes"/><summary type="html"><![CDATA[I just created the best ever coreg tool?]]></summary></entry><entry xml:lang="eng"><title type="html">DEM Coreg is a bound-restricted minimizing problem</title><link href="https://zhihaol.eu.org/blog/2023/Coreg/" rel="alternate" type="text/html" title="DEM Coreg is a bound-restricted minimizing problem"/><published>2023-01-02T00:00:00+00:00</published><updated>2023-01-02T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2023/Coreg</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2023/Coreg/"><![CDATA[<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">importlib</span> <span class="kn">import</span> <span class="nb">reload</span>
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">xdem</span>
<span class="kn">import</span> <span class="n">xsnow</span>
<span class="kn">from</span> <span class="n">xsnow.godh</span> <span class="kn">import</span> <span class="n">load_gdf</span><span class="p">,</span><span class="n">best_shift_px</span><span class="p">,</span><span class="n">get_dh_by_shift_px_gdf</span><span class="p">,</span><span class="n">load_gdf</span>
<span class="kn">from</span> <span class="n">xsnow.misc</span> <span class="kn">import</span> <span class="n">df_sampling_from_dem</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">reload</span><span class="p">(</span><span class="n">xsnow</span><span class="p">.</span><span class="n">misc</span><span class="p">)</span>
<span class="nf">reload</span><span class="p">(</span><span class="n">xsnow</span><span class="p">.</span><span class="n">godh</span><span class="p">)</span>
<span class="nf">reload</span><span class="p">(</span><span class="n">xdem</span><span class="p">)</span>
<span class="nf">reload</span><span class="p">(</span><span class="n">xdem</span><span class="p">.</span><span class="n">coreg</span><span class="p">)</span>
<span class="kn">from</span> <span class="n">importlib</span> <span class="kn">import</span> <span class="nb">reload</span>
<span class="kn">import</span> <span class="n">xsnow</span>
<span class="kn">import</span> <span class="n">xsnow.godh</span>
</code></pre></div></div> <h2 id="dem-coreg-is-a-bound-restricted-minimizing-problem">DEM Coreg is a bound-restricted minimizing problem.</h2> <ul> <li>DEM Coreg is a bound-restricted minimizing problem, but suffering from noise.</li> </ul> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Loading the dataset.
</span>
<span class="c1"># 1 ICESat-2 snow free measurements.
</span><span class="n">sf_gdf</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">snow_free_land_gdf_normal_qc.csv</span><span class="sh">'</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="sh">'</span><span class="se">\t</span><span class="sh">'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 2 DTM 10 exmaple (10 m Norway DTM-10)
#fid_dtm10 = r'\\hypatia.uio.no\lh-mn-geofag-felles\projects\snowdepth\zhihaol\data\dtm10_finse_merged.tif'
</span><span class="n">fid_dtm10</span> <span class="o">=</span> <span class="sa">r</span><span class="sh">'</span><span class="s">\\hypatia.uio.no\lh-mn-geofag-felles\projects\snowdepth\data\DEM\Norway\DTM10_UTM33\6702_4_10m_z33.tif</span><span class="sh">'</span>

<span class="n">dtm_10_</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="n">fid_dtm10</span><span class="p">)</span>
<span class="n">dtm_10</span> <span class="o">=</span> <span class="n">dtm_10_</span> <span class="o">+</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="sh">'</span><span class="s">no_kv_HREF2018B_NN2000_EUREF89.tif</span><span class="sh">'</span><span class="p">).</span><span class="nf">reproject</span><span class="p">(</span><span class="n">dtm_10_</span><span class="p">,</span><span class="n">resampling</span><span class="o">=</span><span class="sh">'</span><span class="s">bilinear</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 3 DTM 1 exmaple (1 m Norway DTM-1)
</span><span class="n">fid_dtm1</span> <span class="o">=</span> <span class="sa">r</span><span class="sh">'</span><span class="s">\\hypatia.uio.no\lh-mn-geofag-felles\projects\snowdepth\data\DEM\Norway\DTM1_UTM33\DTM1_11-11_UTM33\33-113-119.tif</span><span class="sh">'</span>
<span class="n">dtm_1_</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="n">fid_dtm1</span><span class="p">)</span>
<span class="n">dtm_1</span> <span class="o">=</span> <span class="n">dtm_1_</span> <span class="o">+</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="sh">'</span><span class="s">no_kv_HREF2018B_NN2000_EUREF89.tif</span><span class="sh">'</span><span class="p">).</span><span class="nf">reproject</span><span class="p">(</span><span class="n">dtm_1_</span><span class="p">,</span><span class="n">resampling</span><span class="o">=</span><span class="sh">'</span><span class="s">bilinear</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># subset snow free measurements
</span><span class="kn">from</span> <span class="n">xsnow.godh</span> <span class="kn">import</span> <span class="n">load_gdf</span>
<span class="n">sf_subset_dtm10_</span> <span class="o">=</span> <span class="nf">load_gdf</span><span class="p">(</span><span class="n">sf_gdf</span><span class="p">,</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">)</span>
<span class="n">sf_subset_dtm1_</span> <span class="o">=</span> <span class="nf">load_gdf</span><span class="p">(</span><span class="n">sf_gdf</span><span class="p">,</span><span class="n">dtm_1</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">The length of sf_subset_dtm10: </span><span class="si">{</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_subset_dtm10_</span><span class="p">)</span><span class="si">}</span><span class="s"> points</span><span class="sh">'</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">The length of sf_subset_dtm1: </span><span class="si">{</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_subset_dtm1_</span><span class="p">)</span><span class="si">}</span><span class="s"> points</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The length of sf_subset_dtm10: 44149 points
The length of sf_subset_dtm1: 1586 points
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">itertools</span> <span class="kn">import</span> <span class="n">product</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">xdem</span>
<span class="kn">from</span> <span class="n">xsnow.misc</span> <span class="kn">import</span> <span class="n">df_sampling_from_dem</span>

<span class="k">def</span> <span class="nf">yield_surface_noise</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_gdf_subset</span><span class="p">,</span>
                        <span class="n">bond</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="sh">'</span><span class="s">nmad</span><span class="sh">'</span><span class="p">,</span> <span class="n">number_corg</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">downsampling_list</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">,</span>
                        <span class="n">nuthkaab</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">gdc_qc</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">weight</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
    
    <span class="k">if</span> <span class="n">number_corg</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">number_corg</span> <span class="o">=</span> <span class="mi">1</span>
        
    <span class="k">if</span> <span class="n">downsampling_list</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">sampling</span> <span class="ow">in</span> <span class="n">downsampling_list</span><span class="p">:</span>
            <span class="n">res</span> <span class="o">=</span> <span class="p">[</span><span class="nf">best_shift_px</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span> <span class="n">sf_gdf_subset</span><span class="p">,</span> <span class="n">disp</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="n">stat</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="n">perc_t</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="n">std_t</span><span class="p">,</span> <span class="n">downsampling</span><span class="o">=</span><span class="n">sampling</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="n">z_name</span><span class="p">,</span><span class="n">weight</span><span class="o">=</span><span class="n">weight</span><span class="p">)</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">number_corg</span><span class="p">)]</span>
            <span class="n">nmad</span><span class="p">,</span><span class="n">rmse</span><span class="p">,</span><span class="n">std</span><span class="p">,</span><span class="n">median</span> <span class="o">=</span> <span class="nf">surface_noise</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_gdf_subset</span><span class="p">,</span><span class="n">bond</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="n">perc_t</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="n">std_t</span><span class="p">,</span><span class="n">downsampling</span><span class="o">=</span><span class="n">sampling</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="n">z_name</span><span class="p">)</span>
            
            <span class="k">if</span> <span class="n">nuthkaab</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                <span class="k">try</span><span class="p">:</span>
                    <span class="n">func</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="n">coreg</span><span class="p">.</span><span class="nc">NuthKaab</span><span class="p">()</span>
                    <span class="n">func</span><span class="p">.</span><span class="nf">fit_pts</span><span class="p">(</span><span class="n">sf_gdf_subset</span><span class="p">.</span><span class="nf">sample</span><span class="p">(</span><span class="n">frac</span><span class="o">=</span><span class="n">sampling</span><span class="o">/</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_gdf_subset</span><span class="p">),</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">),</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">mask_highcurv</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
                    <span class="n">res_nk</span> <span class="o">=</span> <span class="p">(</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">offset_east_px</span><span class="sh">"</span><span class="p">],</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">offset_north_px</span><span class="sh">"</span><span class="p">],</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">bias</span><span class="sh">"</span><span class="p">],</span><span class="n">func</span><span class="p">.</span><span class="n">_meta</span><span class="p">[</span><span class="sh">"</span><span class="s">nmad</span><span class="sh">"</span><span class="p">])</span>
                    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">NuthKaab coreg on </span><span class="si">{</span><span class="n">sampling</span><span class="si">}</span><span class="s">: </span><span class="si">{</span><span class="n">res_nk</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
                <span class="k">except</span> <span class="nb">ValueError</span><span class="p">:</span>
                    <span class="n">res_nk</span> <span class="o">=</span> <span class="bp">None</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">res_nk</span> <span class="o">=</span> <span class="bp">None</span>

            <span class="k">if</span> <span class="n">gdc_qc</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">sf_subset_dtm10_ref</span> <span class="o">=</span> <span class="n">sf_gdf_subset</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="sh">'</span><span class="s">subset_te_flag == 5</span><span class="sh">'</span><span class="p">)</span>
                <span class="n">res_qc</span> <span class="o">=</span> <span class="nf">best_shift_px</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span> <span class="n">sf_subset_dtm10_ref</span><span class="p">,</span> <span class="n">disp</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="n">stat</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="n">perc_t</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="n">std_t</span><span class="p">,</span> <span class="n">downsampling</span><span class="o">=</span><span class="n">sampling</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="n">z_name</span><span class="p">)</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">res_qc</span> <span class="o">=</span> <span class="bp">None</span>

            <span class="k">yield</span> <span class="n">nmad</span><span class="p">,</span> <span class="n">rmse</span><span class="p">,</span> <span class="n">std</span><span class="p">,</span> <span class="n">median</span><span class="p">,</span><span class="n">res</span><span class="p">,</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_qc</span><span class="p">,</span><span class="nf">min</span><span class="p">(</span><span class="n">sampling</span><span class="p">,</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_gdf_subset</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">surface_noise</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_gdf_subset</span><span class="p">,</span><span class="n">bond</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">downsampling</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">h_te_best_fit</span><span class="sh">'</span><span class="p">):</span>

    <span class="k">if</span> <span class="nf">isinstance</span><span class="p">(</span><span class="n">sf_gdf_subset</span><span class="p">,</span><span class="n">xdem</span><span class="p">.</span><span class="n">DEM</span><span class="p">):</span>
        <span class="n">sf_gdf_subset</span> <span class="o">=</span> <span class="nf">df_sampling_from_dem</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_gdf_subset</span><span class="p">,</span><span class="n">samples</span><span class="o">=</span><span class="mi">10000</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">downsampling</span> <span class="ow">and</span> <span class="nf">len</span><span class="p">(</span><span class="n">sf_gdf_subset</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">downsampling</span><span class="p">:</span>
        <span class="n">sf_gdf_subset</span> <span class="o">=</span> <span class="n">sf_gdf_subset</span><span class="p">.</span><span class="nf">sample</span><span class="p">(</span><span class="n">frac</span><span class="o">=</span><span class="n">downsampling</span><span class="o">/</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_gdf_subset</span><span class="p">),</span><span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">).</span><span class="nf">copy</span><span class="p">()</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Running on downsampling. The length of the gdf:</span><span class="sh">'</span><span class="p">,</span><span class="nf">len</span><span class="p">(</span><span class="n">sf_gdf_subset</span><span class="p">))</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Set downsampling = other value or False to make a change.</span><span class="sh">'</span><span class="p">)</span>

    <span class="n">bond_</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="n">bond</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">bond</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="n">bond</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
    <span class="n">nmad</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="nf">len</span><span class="p">(</span><span class="n">bond_</span><span class="p">),</span><span class="nf">len</span><span class="p">(</span><span class="n">bond_</span><span class="p">)))</span>
    <span class="n">rmse</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="nf">len</span><span class="p">(</span><span class="n">bond_</span><span class="p">),</span><span class="nf">len</span><span class="p">(</span><span class="n">bond_</span><span class="p">)))</span>
    <span class="n">std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="nf">len</span><span class="p">(</span><span class="n">bond_</span><span class="p">),</span><span class="nf">len</span><span class="p">(</span><span class="n">bond_</span><span class="p">)))</span>
    <span class="n">median</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="nf">len</span><span class="p">(</span><span class="n">bond_</span><span class="p">),</span><span class="nf">len</span><span class="p">(</span><span class="n">bond_</span><span class="p">)))</span>

    <span class="k">for</span> <span class="n">e</span><span class="p">,</span><span class="n">n</span> <span class="ow">in</span> <span class="nf">product</span><span class="p">(</span><span class="n">bond_</span><span class="p">,</span><span class="n">bond_</span><span class="p">):</span>
        <span class="n">results</span> <span class="o">=</span> <span class="nf">get_dh_by_shift_px_gdf</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_gdf_subset</span><span class="p">,(</span><span class="n">e</span><span class="p">,</span><span class="n">n</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="sh">'</span><span class="s">all</span><span class="sh">'</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="n">perc_t</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="n">std_t</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="n">z_name</span><span class="p">)</span>
        <span class="n">row</span> <span class="o">=</span> <span class="nf">int</span><span class="p">((</span><span class="n">n</span><span class="o">-</span><span class="n">bond</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="n">bond</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
        <span class="n">col</span> <span class="o">=</span> <span class="nf">int</span><span class="p">((</span><span class="n">e</span><span class="o">-</span><span class="n">bond</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="n">bond</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
        <span class="n">nmad</span><span class="p">[</span><span class="n">row</span><span class="p">,</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">nmad</span><span class="sh">'</span><span class="p">]</span>
        <span class="n">rmse</span><span class="p">[</span><span class="n">row</span><span class="p">,</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">rmse</span><span class="sh">'</span><span class="p">]</span>
        <span class="n">std</span><span class="p">[</span><span class="n">row</span><span class="p">,</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">std</span><span class="sh">'</span><span class="p">]</span>
        <span class="n">median</span><span class="p">[</span><span class="n">row</span><span class="p">,</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">median</span><span class="sh">'</span><span class="p">]</span>

    <span class="k">return</span> <span class="n">nmad</span><span class="p">,</span><span class="n">rmse</span><span class="p">,</span><span class="n">std</span><span class="p">,</span><span class="n">median</span>

<span class="k">def</span> <span class="nf">surface_plot</span><span class="p">(</span><span class="n">Z</span><span class="p">,</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span>
                 <span class="n">ax</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
                 <span class="n">res</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">res_2</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">res_3</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">minimal</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">[m]</span><span class="sh">'</span><span class="p">,</span>
                 <span class="n">z_step_level</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">zlim_s</span><span class="o">=</span><span class="mi">20</span><span class="p">):</span>

    <span class="k">if</span> <span class="n">ax</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="n">subplot_kw</span><span class="o">=</span><span class="p">{</span><span class="sh">"</span><span class="s">projection</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">3d</span><span class="sh">"</span><span class="p">})</span>
    <span class="k">if</span> <span class="n">xlim</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">xlim</span><span class="o">=</span><span class="n">bond</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span>
    <span class="k">if</span> <span class="n">ylim</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">ylim</span><span class="o">=</span><span class="n">bond</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span>

    <span class="c1"># Make a grid.
</span>    <span class="n">X</span> <span class="o">=</span> <span class="n">Y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="n">bond</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">bond</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="n">bond</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
    <span class="n">X</span><span class="p">,</span> <span class="n">Y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">meshgrid</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">)</span>

    <span class="c1"># plot minimal
</span>    <span class="n">zmin</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">min</span><span class="p">(</span><span class="n">Z</span><span class="p">)</span>
    <span class="n">zmax</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">max</span><span class="p">(</span><span class="n">Z</span><span class="p">)</span>
    <span class="n">mask</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">Z</span><span class="p">)</span> <span class="o">==</span> <span class="n">zmin</span>
    <span class="c1">#color = np.where(mask,'blue','red')
</span>    
    <span class="c1"># Plot the 3D surface
</span>    <span class="n">ax</span><span class="p">.</span><span class="nf">plot_surface</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">Z</span><span class="p">,</span> <span class="n">edgecolor</span><span class="o">=</span><span class="sh">'</span><span class="s">royalblue</span><span class="sh">'</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">rstride</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">cstride</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>
                    <span class="n">alpha</span><span class="o">=</span><span class="mf">0.3</span><span class="p">)</span>

    <span class="c1"># Plot projections of the contours for each dimension.  By choosing offsets
</span>    <span class="c1"># that match the appropriate axes limits, the projected contours will sit on
</span>    <span class="c1"># the 'walls' of the graph.
</span>    <span class="n">kwargs</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">if</span> <span class="n">z_step_level</span><span class="p">:</span>
        <span class="n">kwargs</span><span class="p">[</span><span class="sh">'</span><span class="s">levels</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="n">zmin</span><span class="p">,</span> <span class="n">zmax</span> <span class="o">+</span> <span class="n">z_step_level</span><span class="p">,</span> <span class="n">z_step_level</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">z_step_level</span> <span class="o">=</span> <span class="n">zlim</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">/</span> <span class="n">zlim_s</span>
        <span class="n">kwargs</span><span class="p">[</span><span class="sh">'</span><span class="s">levels</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="n">zmin</span><span class="p">,</span> <span class="n">zmax</span> <span class="o">+</span> <span class="n">z_step_level</span><span class="p">,</span> <span class="n">z_step_level</span><span class="p">)</span>


    <span class="n">z_contour</span> <span class="o">=</span> <span class="n">ax</span><span class="p">.</span><span class="nf">contour</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">Z</span><span class="p">,</span><span class="n">zdir</span><span class="o">=</span><span class="sh">'</span><span class="s">z</span><span class="sh">'</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">zlim</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">coolwarm</span><span class="sh">'</span><span class="p">,</span><span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">contour</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">Z</span><span class="p">,</span> <span class="n">zdir</span><span class="o">=</span><span class="sh">'</span><span class="s">x</span><span class="sh">'</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">xlim</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">coolwarm</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">contour</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">Z</span><span class="p">,</span> <span class="n">zdir</span><span class="o">=</span><span class="sh">'</span><span class="s">y</span><span class="sh">'</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">ylim</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">'</span><span class="s">coolwarm_r</span><span class="sh">'</span><span class="p">)</span>
    
    <span class="c1">#ax.clabel(z_contour, kwargs['levels'][0::2], z_contour.levels[::2], inline=True,fmt ='%1.1f', colors='black', fontsize='x-large')
</span>
    <span class="k">if</span> <span class="n">minimal</span><span class="p">:</span>
        <span class="c1"># scatter minimal on bottom
</span>        <span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">X</span><span class="p">[</span><span class="n">mask</span><span class="p">],</span> <span class="n">Y</span><span class="p">[</span><span class="n">mask</span><span class="p">],</span> <span class="n">zlim</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">blue</span><span class="sh">'</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">minimal</span><span class="sh">'</span><span class="p">)</span>
        <span class="c1">#scatter minimal on z-axis
</span>        <span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">xlim</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">ylim</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">zmin</span><span class="p">,</span><span class="n">marker</span><span class="o">=</span><span class="sh">"</span><span class="s">x</span><span class="sh">"</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">blue</span><span class="sh">'</span><span class="p">)</span>
    
    <span class="c1"># plot gradient results
</span>    <span class="k">if</span> <span class="n">res</span><span class="p">:</span>

        <span class="c1"># plot [0,0] on bottom
</span>        <span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">zlim</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.4</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">black</span><span class="sh">'</span><span class="p">,</span><span class="n">edgecolors</span><span class="o">=</span><span class="sh">'</span><span class="s">white</span><span class="sh">'</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">(0,0)</span><span class="sh">'</span><span class="p">)</span>

        <span class="c1"># plot [shift matrix] by gradient descending on bottom
</span>        <span class="n">_x</span><span class="p">,</span><span class="n">_y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">res</span><span class="p">)[:,</span><span class="mi">0</span><span class="p">],</span><span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">res</span><span class="p">)[:,</span><span class="mi">1</span><span class="p">]</span>
        <span class="n">_nmad</span><span class="p">,</span><span class="n">_rmse</span><span class="p">,</span><span class="n">_std</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">res</span><span class="p">)[:,</span><span class="mi">3</span><span class="p">],</span><span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">res</span><span class="p">)[:,</span><span class="mi">4</span><span class="p">],</span><span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">res</span><span class="p">)[:,</span><span class="mi">5</span><span class="p">]</span>
        <span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">_x</span><span class="p">,</span> <span class="n">_y</span><span class="p">,</span> <span class="n">zlim</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">7</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">green</span><span class="sh">'</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">GDC</span><span class="sh">'</span><span class="p">)</span>

        <span class="c1"># plot shift matrix on z axis
</span>        <span class="k">if</span> <span class="n">zlabel</span> <span class="o">==</span> <span class="sh">'</span><span class="s">NMAD [m]</span><span class="sh">'</span><span class="p">:</span>
            <span class="n">_z</span> <span class="o">=</span> <span class="n">_nmad</span>
        <span class="k">if</span> <span class="n">zlabel</span> <span class="o">==</span> <span class="sh">'</span><span class="s">RMSE [m]</span><span class="sh">'</span><span class="p">:</span>
            <span class="n">_z</span> <span class="o">=</span> <span class="n">_rmse</span>
        <span class="k">if</span> <span class="n">zlabel</span> <span class="o">==</span> <span class="sh">'</span><span class="s">STD [m]</span><span class="sh">'</span><span class="p">:</span>
            <span class="n">_z</span> <span class="o">=</span> <span class="n">_std</span>
        
        <span class="c1">#ax.scatter([xlim[1]]*len(_x), [ylim[1]]*len(_y),_z, marker="x", color='green')
</span>    
    <span class="c1"># plot nuthkaab results
</span>    <span class="k">if</span> <span class="n">res_1</span><span class="p">:</span>
        <span class="c1"># plot [shift matrix] by gradient descending on bottom
</span>        <span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">res_1</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">res_1</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">zlim</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">red</span><span class="sh">'</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">NuthKaab</span><span class="sh">'</span><span class="p">)</span>

    <span class="c1"># plot reference results
</span>    <span class="k">if</span> <span class="n">res_2</span><span class="p">:</span>
        <span class="c1"># plot [shift matrix] by gradient descending on bottom
</span>        <span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">res_2</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">res_2</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">zlim</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">alpha</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">purple</span><span class="sh">'</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">GDC_qc</span><span class="sh">'</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">res_3</span><span class="p">:</span>
        <span class="c1"># plot [shift matrix] by gradient descending on bottom
</span>        <span class="n">ax</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="n">res_2</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">res_2</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">zlim</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">alpha</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">black</span><span class="sh">'</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">others</span><span class="sh">'</span><span class="p">)</span>

    <span class="n">ax</span><span class="p">.</span><span class="nf">set</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span> <span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span> <span class="n">zlim</span><span class="o">=</span><span class="n">zlim</span><span class="p">,</span>
        <span class="n">xlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">Shifted E [px]</span><span class="sh">'</span><span class="p">,</span> <span class="n">ylabel</span><span class="o">=</span><span class="sh">'</span><span class="s">Shifted N [px]</span><span class="sh">'</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="n">zlabel</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="n">title</span><span class="p">)</span>

    <span class="n">ax</span><span class="p">.</span><span class="nf">legend</span><span class="p">()</span>

</code></pre></div></div> <h2 id="case-1---shifted-dem">Case 1 - Shifted DEM</h2> <p>Nuth &amp; Kaab (2011) showed elevation difference in a 2D scheme with $\alpha$ as the magnitude of the horizontal shift, b as the direction of the shift, which is extremely useful for coregistration when there are enough points and the size and resolution of DEM are relatively manageable.</p> <p><img src="https://i.imgur.com/UzkOHot.png" alt=""/></p> <p>We can also plot the variation of elevation difference in a 3D scheme. In this case, I shifted a DTM10 (1.2, -0.7) px horizontaly and 0.16 m vertically on purpose and co-register it back in a brute test.</p> <ul> <li>Brute test calculated the elevation difference in 0.1 px interval over a window (-2 px, 2 px) on east and north.</li> <li>All coregs are shifted base on NMAD.</li> <li>The points are subsampled to 10000, 3000, 1000.</li> </ul> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">xsnow.misc</span> <span class="kn">import</span> <span class="n">dem_shift</span>

<span class="c1"># Shift a DTM10 (1.2,-0.7) px and 0.16 m on purpose
</span><span class="n">dtm_10_shifted</span> <span class="o">=</span> <span class="nf">dem_shift</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="mf">1.2</span><span class="p">,</span><span class="o">-</span><span class="mf">0.7</span><span class="p">,</span><span class="mf">0.16</span><span class="p">)</span>
<span class="n">dem_tba</span> <span class="o">=</span> <span class="n">dtm_10_shifted</span>
<span class="n">df_ref</span> <span class="o">=</span> <span class="nf">df_sampling_from_dem</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">dem_tba</span><span class="p">,</span><span class="n">samples</span><span class="o">=</span><span class="mi">20000</span><span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">bond</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mf">0.1</span><span class="p">)</span>
<span class="n">xlim</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="n">ylim</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

<span class="k">for</span> <span class="n">nmad</span><span class="p">,</span> <span class="n">rmse</span><span class="p">,</span> <span class="n">std</span><span class="p">,</span> <span class="n">median</span><span class="p">,</span><span class="n">res</span><span class="p">,</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_qc</span><span class="p">,</span><span class="n">sampling</span> <span class="ow">in</span> <span class="nf">yield_surface_noise</span><span class="p">(</span><span class="n">dem_tba</span><span class="p">,</span><span class="n">df_ref</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="n">downsampling_list</span><span class="o">=</span><span class="p">[</span><span class="mi">10000</span><span class="p">,</span><span class="mi">3000</span><span class="p">,</span><span class="mi">1000</span><span class="p">],</span><span class="n">gdc_qc</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">z</span><span class="sh">'</span><span class="p">):</span>
    <span class="n">z_lim_nmad</span> <span class="o">=</span> <span class="p">(</span><span class="nf">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="mi">20</span><span class="p">)</span>
    <span class="n">z_lim_rmse</span> <span class="o">=</span> <span class="p">(</span><span class="nf">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span><span class="o">-</span><span class="mf">1.5</span><span class="p">),</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="mi">20</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">z_lim_std</span> <span class="o">=</span> <span class="p">(</span><span class="nf">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">5</span><span class="p">]</span><span class="o">-</span><span class="mf">1.5</span><span class="p">),</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="mi">20</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

    <span class="n">fig</span><span class="p">,(</span><span class="n">ax1</span><span class="p">,</span><span class="n">ax2</span><span class="p">,</span><span class="n">ax3</span><span class="p">)</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span><span class="n">subplot_kw</span><span class="o">=</span><span class="p">{</span><span class="sh">"</span><span class="s">projection</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">3d</span><span class="sh">"</span><span class="p">})</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">suptitle</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">shifted pixels of DEM longyearbyen on </span><span class="si">{</span><span class="n">sampling</span><span class="si">}</span><span class="s"> points</span><span class="sh">'</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">nmad</span><span class="p">,</span> <span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">NMAD</span><span class="sh">'</span><span class="p">,</span> <span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span> <span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">NMAD [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_nmad</span><span class="p">,</span><span class="n">zlim_s</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">rmse</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">RMSE</span><span class="sh">'</span><span class="p">,</span><span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">RMSE [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_rmse</span><span class="p">,</span><span class="n">zlim_s</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">std</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">STD</span><span class="sh">'</span><span class="p">,</span><span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">STD [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_std</span><span class="p">,</span><span class="n">zlim_s</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 10000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-1.2031,0.7031,-0.1630),0.1780
Running on downsampling. The length of the gdf: 10000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
NuthKaab coreg on 10000: (-1.2059757056614222, 0.6973771900864857, -0.16427612, 0.17899064941406248)
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_7_1.png" alt="png" class="center-image"/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 3000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-1.2031,0.7031,-0.1630),0.1780
Running on downsampling. The length of the gdf: 3000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
NuthKaab coreg on 3000: (-1.199313462032361, 0.6898301972399311, -0.16362, 0.1797598205566406)
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_7_3.png" alt="png" class="center-image"/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 1000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-1.1815,0.6815,-0.1622),0.1794
Running on downsampling. The length of the gdf: 1000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_7_5.png" alt="png" class="center-image"/></p> <h2 id="case-2---dem-longyearbyen-1990-and-longyearbyen-2009">Case 2 - DEM Longyearbyen 1990 and Longyearbyen 2009</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">xsnow.misc</span> <span class="kn">import</span> <span class="n">df_sampling_from_dem</span>
<span class="kn">from</span> <span class="n">xdem</span> <span class="kn">import</span> <span class="n">examples</span>
<span class="kn">from</span> <span class="n">geoutils</span> <span class="kn">import</span> <span class="n">Vector</span><span class="p">,</span><span class="n">Raster</span>

<span class="n">dem_ref</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="n">examples</span><span class="p">.</span><span class="nf">get_path</span><span class="p">(</span><span class="sh">"</span><span class="s">longyearbyen_ref_dem</span><span class="sh">"</span><span class="p">))</span>
<span class="n">dem_tba</span> <span class="o">=</span> <span class="n">xdem</span><span class="p">.</span><span class="nc">DEM</span><span class="p">(</span><span class="n">examples</span><span class="p">.</span><span class="nf">get_path</span><span class="p">(</span><span class="sh">"</span><span class="s">longyearbyen_tba_dem</span><span class="sh">"</span><span class="p">))</span>
<span class="n">glacier_mask</span> <span class="o">=</span> <span class="nc">Vector</span><span class="p">(</span><span class="n">examples</span><span class="p">.</span><span class="nf">get_path</span><span class="p">(</span><span class="sh">"</span><span class="s">longyearbyen_glacier_outlines</span><span class="sh">"</span><span class="p">))</span>
<span class="n">inlier_mask</span> <span class="o">=</span> <span class="o">~</span><span class="n">glacier_mask</span><span class="p">.</span><span class="nf">create_mask</span><span class="p">(</span><span class="n">dem_ref</span><span class="p">)</span>

<span class="n">df_ref</span> <span class="o">=</span> <span class="nf">df_sampling_from_dem</span><span class="p">(</span><span class="n">dem_ref</span><span class="p">,</span><span class="n">dem_tba</span><span class="p">,</span><span class="n">inlier_mask</span><span class="o">=</span><span class="n">inlier_mask</span><span class="p">,</span><span class="n">samples</span><span class="o">=</span><span class="mi">15000</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="sh">'</span><span class="s">ul</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bond</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mf">0.05</span><span class="p">)</span>

<span class="c1"># axes limit
</span><span class="n">xlim</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ylim</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>

<span class="k">for</span> <span class="n">nmad</span><span class="p">,</span> <span class="n">rmse</span><span class="p">,</span> <span class="n">std</span><span class="p">,</span> <span class="n">median</span><span class="p">,</span><span class="n">res</span><span class="p">,</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_qc</span><span class="p">,</span><span class="n">sampling</span> <span class="ow">in</span> <span class="nf">yield_surface_noise</span><span class="p">(</span><span class="n">dem_tba</span><span class="p">,</span> <span class="n">df_ref</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="n">downsampling_list</span><span class="o">=</span><span class="p">[</span><span class="mi">10000</span><span class="p">,</span><span class="mi">3000</span><span class="p">,</span><span class="mi">1000</span><span class="p">],</span><span class="n">gdc_qc</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">z_name</span><span class="o">=</span><span class="sh">'</span><span class="s">z</span><span class="sh">'</span><span class="p">):</span>
    <span class="n">z_lim_nmad</span> <span class="o">=</span> <span class="p">(</span><span class="nf">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>
    <span class="n">z_lim_rmse</span> <span class="o">=</span> <span class="p">(</span><span class="nf">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span><span class="o">-</span><span class="mf">1.5</span><span class="p">),</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>
    <span class="n">z_lim_std</span> <span class="o">=</span> <span class="p">(</span><span class="nf">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">5</span><span class="p">]</span><span class="o">-</span><span class="mf">1.5</span><span class="p">),</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>

    <span class="n">fig</span><span class="p">,(</span><span class="n">ax1</span><span class="p">,</span><span class="n">ax2</span><span class="p">,</span><span class="n">ax3</span><span class="p">)</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span><span class="n">subplot_kw</span><span class="o">=</span><span class="p">{</span><span class="sh">"</span><span class="s">projection</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">3d</span><span class="sh">"</span><span class="p">})</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">suptitle</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">shifted pixels of DEM longyearbyen on </span><span class="si">{</span><span class="n">sampling</span><span class="si">}</span><span class="s"> points</span><span class="sh">'</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">nmad</span><span class="p">,</span> <span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">NMAD</span><span class="sh">'</span><span class="p">,</span> <span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span> <span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">NMAD [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_nmad</span><span class="p">,</span><span class="n">zlim_s</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">rmse</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">RMSE</span><span class="sh">'</span><span class="p">,</span><span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">RMSE [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_rmse</span><span class="p">,</span><span class="n">zlim_s</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">std</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">STD</span><span class="sh">'</span><span class="p">,</span><span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">STD [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_std</span><span class="p">,</span><span class="n">zlim_s</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 10000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-0.5469,-0.1250,-1.8884),2.4996
Running on downsampling. The length of the gdf: 10000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
NuthKaab coreg on 10000: (-0.44989970346639757, -0.13631736964576785, -1.9579468, 2.543117335510254)
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_10_1.png" alt="png" class="center-image"/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 3000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-0.5000,-0.1562,-1.8764),2.5242
Running on downsampling. The length of the gdf: 3000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
NuthKaab coreg on 3000: (-0.43152742135357697, -0.17112353846215173, -1.9326782, 2.547257286071777)
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_10_3.png" alt="png" class="center-image"/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 1000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-0.5000,-0.1250,-1.8980),2.5237
Running on downsampling. The length of the gdf: 1000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_10_5.png" alt="png" class="center-image"/></p> <h2 id="case-3---dtm10">Case 3 - DTM10</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bond</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mf">1.0</span><span class="p">,</span><span class="mf">1.0</span><span class="p">,</span><span class="mf">0.05</span><span class="p">)</span>

<span class="c1"># axes limit
</span><span class="n">xlim</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mf">1.0</span><span class="p">,</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">ylim</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span><span class="mf">1.0</span><span class="p">)</span>

<span class="k">for</span> <span class="n">nmad</span><span class="p">,</span> <span class="n">rmse</span><span class="p">,</span> <span class="n">std</span><span class="p">,</span> <span class="n">median</span><span class="p">,</span><span class="n">res</span><span class="p">,</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_qc</span><span class="p">,</span><span class="n">sampling</span> <span class="ow">in</span> <span class="nf">yield_surface_noise</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_subset_dtm10</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="n">downsampling_list</span><span class="o">=</span><span class="p">[</span><span class="mi">10000</span><span class="p">,</span><span class="mi">3000</span><span class="p">,</span><span class="mi">1000</span><span class="p">],</span><span class="n">weight</span><span class="o">=</span><span class="sh">'</span><span class="s">subset_te_flag</span><span class="sh">'</span><span class="p">):</span>
    <span class="n">z_lim_nmad</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">z_lim_rmse</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">z_lim_std</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>  

    <span class="n">fig</span><span class="p">,(</span><span class="n">ax1</span><span class="p">,</span><span class="n">ax2</span><span class="p">,</span><span class="n">ax3</span><span class="p">)</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span><span class="n">subplot_kw</span><span class="o">=</span><span class="p">{</span><span class="sh">"</span><span class="s">projection</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">3d</span><span class="sh">"</span><span class="p">})</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">suptitle</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">shifted pixels of DTM10 on </span><span class="si">{</span><span class="n">sampling</span><span class="si">}</span><span class="s"> points</span><span class="sh">'</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">nmad</span><span class="p">,</span> <span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">NMAD</span><span class="sh">'</span><span class="p">,</span> <span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span> <span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">NMAD [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_nmad</span><span class="p">,</span><span class="n">z_step_level</span><span class="o">=</span><span class="mf">0.1</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">rmse</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">RMSE</span><span class="sh">'</span><span class="p">,</span><span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">RMSE [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_rmse</span><span class="p">,</span><span class="n">z_step_level</span><span class="o">=</span><span class="mf">0.1</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">std</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">STD</span><span class="sh">'</span><span class="p">,</span><span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">STD [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_std</span><span class="p">,</span><span class="n">z_step_level</span><span class="o">=</span><span class="mf">0.1</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 10000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-0.4375,0.2656,-0.0065),0.5992
Running on downsampling. The length of the gdf: 10000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
NuthKaab coreg on 10000: (-0.43959885000839216, 0.2685718552192047, -0.0128173828125, 0.5952479736328125)
Running best_shift_px on downsampling. The length of the gdf: 10000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-0.4844,0.3125,0.1088),0.3848
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_13_1.png" alt="png" class="center-image"/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 3000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-0.4844,0.1815,-0.0063),0.6086
Running on downsampling. The length of the gdf: 3000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
NuthKaab coreg on 3000: (-0.4273086350909474, 0.259520889514669, -0.01318359375, 0.5863798828125)
Running best_shift_px on downsampling. The length of the gdf: 3000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-0.4591,0.2909,0.1092),0.3856
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_13_3.png" alt="png" class="center-image"/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 1000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-0.4688,0.5060,-0.0110),0.6305
Running on downsampling. The length of the gdf: 1000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
Running best_shift_px on downsampling. The length of the gdf: 1000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-0.4627,0.3438,0.1067),0.3884
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_13_5.png" alt="png" class="center-image"/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">xsnow.godh</span> <span class="kn">import</span> <span class="n">get_dh_by_shift_px_gdf</span>

<span class="nf">get_dh_by_shift_px_gdf</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_subset_dtm10</span><span class="p">,(</span><span class="o">-</span><span class="mf">0.4375</span><span class="p">,</span><span class="mf">0.2656</span><span class="p">),</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.5992295654296874
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">get_dh_by_shift_px_gdf</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_subset_dtm10</span><span class="p">,(</span><span class="o">-</span><span class="mf">0.43959885000839216</span><span class="p">,</span> <span class="mf">0.2685718552192047</span><span class="p">),</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.5986866210937499
</code></pre></div></div> <h2 id="case---4-dtm1">Case - 4 DTM1</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bond</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mf">0.1</span><span class="p">)</span>

<span class="c1"># axes limit
</span><span class="n">xlim</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="n">ylim</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>

<span class="k">for</span> <span class="n">nmad</span><span class="p">,</span> <span class="n">rmse</span><span class="p">,</span> <span class="n">std</span><span class="p">,</span> <span class="n">median</span><span class="p">,</span><span class="n">res</span><span class="p">,</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_qc</span><span class="p">,</span><span class="n">sampling</span> <span class="ow">in</span> <span class="nf">yield_surface_noise</span><span class="p">(</span><span class="n">dtm_1</span><span class="p">,</span><span class="n">sf_subset_dtm1</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="n">downsampling_list</span><span class="o">=</span><span class="p">[</span><span class="mi">10000</span><span class="p">,</span><span class="mi">1000</span><span class="p">,</span><span class="mi">500</span><span class="p">],</span><span class="n">gdc_qc</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">weight</span><span class="o">=</span><span class="sh">'</span><span class="s">subset_te_flag</span><span class="sh">'</span><span class="p">):</span>
    <span class="n">z_lim_nmad</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.4</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mf">0.4</span><span class="p">)</span>
    <span class="n">z_lim_rmse</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.6</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mf">0.8</span><span class="p">)</span>
    <span class="n">z_lim_std</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.6</span><span class="p">,</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mf">0.8</span><span class="p">)</span>

    <span class="n">fig</span><span class="p">,(</span><span class="n">ax1</span><span class="p">,</span><span class="n">ax2</span><span class="p">,</span><span class="n">ax3</span><span class="p">)</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span><span class="n">subplot_kw</span><span class="o">=</span><span class="p">{</span><span class="sh">"</span><span class="s">projection</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">3d</span><span class="sh">"</span><span class="p">})</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">suptitle</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">shifted pixels of DTM1 on </span><span class="si">{</span><span class="n">sampling</span><span class="si">}</span><span class="s"> points</span><span class="sh">'</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">nmad</span><span class="p">,</span> <span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">NMAD</span><span class="sh">'</span><span class="p">,</span> <span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span> <span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">NMAD [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_nmad</span><span class="p">,</span><span class="n">z_step_level</span><span class="o">=</span><span class="mf">0.01</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">rmse</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">RMSE</span><span class="sh">'</span><span class="p">,</span><span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">RMSE [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_rmse</span><span class="p">,</span><span class="n">z_step_level</span><span class="o">=</span><span class="mf">0.01</span><span class="p">)</span>
    <span class="nf">surface_plot</span><span class="p">(</span><span class="n">std</span><span class="p">,</span><span class="n">bond</span><span class="o">=</span><span class="n">bond</span><span class="p">,</span><span class="n">xlim</span><span class="o">=</span><span class="n">xlim</span><span class="p">,</span><span class="n">ylim</span><span class="o">=</span><span class="n">ylim</span><span class="p">,</span><span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">STD</span><span class="sh">'</span><span class="p">,</span><span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">,</span><span class="n">res_1</span><span class="o">=</span><span class="n">res_nk</span><span class="p">,</span><span class="n">res_2</span><span class="o">=</span><span class="n">res_qc</span><span class="p">,</span> <span class="n">zlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">STD [m]</span><span class="sh">'</span><span class="p">,</span><span class="n">zlim</span><span class="o">=</span><span class="n">z_lim_std</span><span class="p">,</span><span class="n">z_step_level</span><span class="o">=</span><span class="mf">0.01</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-1.5000,-1.9375,-0.0508),0.5833
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_18_1.png" alt="png" class="center-image"/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 1000
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-1.7656,0.2284,-0.0659),0.5798
Running on downsampling. The length of the gdf: 1000
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_18_3.png" alt="png" class="center-image"/></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running best_shift_px on downsampling. The length of the gdf: 500
Gradient Descending Coreg fit matrix(e_px,n_px,bias),nmad:(-1.9736,-2.0781,-0.0555),0.5788
Running on downsampling. The length of the gdf: 500
Set downsampling = other value or False to make a change.
Warning: There is no curvature in dataframe. Set mask_highcurv = True for more robust results and costs more time
</code></pre></div></div> <p><img src="/assets/img/notebook/xsnow_coreg/xsnow_coreg_18_5.png" alt="png" class="center-image"/></p> <h2 id="the-best-fit-algorithm-and-coeficients">The best fit algorithm and coeficients</h2> <p>Gradient descending can also be implemented by L-BFGS-B from Scipy.optimize if the noise is not severe.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">scipy.optimize</span> <span class="kn">import</span> <span class="n">minimize</span>
<span class="kn">from</span> <span class="n">xsnow.godh</span> <span class="kn">import</span> <span class="n">get_dh_by_shift_px_gdf</span>

<span class="c1"># start iteration, find the best shifting px
</span><span class="n">func_x</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="nf">get_dh_by_shift_px_gdf</span><span class="p">(</span><span class="n">dtm_10</span><span class="p">,</span><span class="n">sf_subset_dtm10</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="n">perc_t</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">std_t</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="n">stat</span><span class="o">=</span><span class="sh">'</span><span class="s">rmse</span><span class="sh">'</span><span class="p">)</span>
<span class="n">res</span> <span class="o">=</span> <span class="nf">minimize</span><span class="p">(</span><span class="n">func_x</span><span class="p">,</span> <span class="n">x0</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="n">method</span><span class="o">=</span><span class="sh">'</span><span class="s">L-BFGS-B</span><span class="sh">'</span><span class="p">,</span><span class="n">bounds</span><span class="o">=</span><span class="p">((</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)))</span>
<span class="n">res</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      fun: 1.5511970187060895
 hess_inv: &lt;2x2 LbfgsInvHessProduct with dtype=float64&gt;
      jac: array([0.        , 0.01073706])
  message: 'CONVERGENCE: REL_REDUCTION_OF_F_&lt;=_FACTR*EPSMCH'
     nfev: 99
      nit: 7
     njev: 33
   status: 0
  success: True
        x: array([-0.09557894,  0.00446687])
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">res</span> <span class="o">=</span> <span class="nf">minimize</span><span class="p">(</span><span class="n">func_x</span><span class="p">,</span> <span class="n">x0</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="n">method</span><span class="o">=</span><span class="sh">'</span><span class="s">BFGS</span><span class="sh">'</span><span class="p">)</span>
<span class="n">res</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      fun: 1.5797875171900577
 hess_inv: array([[7.02123e-09, 0.00000e+00],
       [0.00000e+00, 1.00000e+00]])
      jac: array([0.0354276, 0.       ])
  message: 'Desired error not necessarily achieved due to precision loss.'
     nfev: 237
      nit: 2
     njev: 75
   status: 2
  success: False
        x: array([1.37243807e-07, 0.00000000e+00])
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">xsnow.noiseopt</span> <span class="kn">import</span> <span class="n">minimizeCompass</span>
<span class="n">res</span> <span class="o">=</span> <span class="nf">minimizeCompass</span><span class="p">(</span><span class="n">func_x</span><span class="p">,</span> <span class="n">x0</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="n">deltainit</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="n">deltatol</span><span class="o">=</span><span class="mf">0.006</span><span class="p">,</span><span class="n">feps</span><span class="o">=</span><span class="mf">0.0001</span><span class="p">,</span><span class="n">bounds</span><span class="o">=</span><span class="p">((</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)),</span><span class="n">errorcontrol</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">res</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    free: array([False, False])
     fun: 1.491898243075958
 message: 'convergence within deltatol'
    nfev: 41
     nit: 14
 success: True
       x: array([-0.359375,  0.25    ])
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">res</span> <span class="o">=</span> <span class="nf">minimizeCompass</span><span class="p">(</span><span class="n">func_x</span><span class="p">,</span> <span class="n">x0</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="n">deltainit</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="n">deltatol</span><span class="o">=</span><span class="mf">0.006</span><span class="p">,</span><span class="n">feps</span><span class="o">=</span><span class="mf">0.0005</span><span class="p">,</span><span class="n">bounds</span><span class="o">=</span><span class="p">((</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)),</span><span class="n">errorcontrol</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">res</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    free: array([ True, False])
     fun: 1.491898243075958
 message: 'convergence within deltatol. dim 0 is free at optimum'
    nfev: 40
     nit: 13
 success: True
       x: array([-0.359375,  0.25    ])
</code></pre></div></div>]]></content><author><name>Zhihao</name></author><category term="geodata"/><category term="datascience"/><category term="notes"/><summary type="html"><![CDATA[but suffering from noise]]></summary></entry><entry xml:lang="eng"><title type="html">Puerh tea 001</title><link href="https://zhihaol.eu.org/blog/2023/Puerh-tea-001/" rel="alternate" type="text/html" title="Puerh tea 001"/><published>2023-01-01T00:00:00+00:00</published><updated>2023-01-01T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2023/Puerh-tea-001</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2023/Puerh-tea-001/"><![CDATA[<p>Pu’erh tea, also spelled pu-erh or puer, is a type of fermented tea that is native to Yunnan province in China. It is named after the town of Pu’erh, which is located in the southern part of Yunnan province and has a long history of producing and trading tea. The town was a major hub on the <a href="https://en.wikipedia.org/wiki/Tea_Horse_Road">ancient Cha Ma Gu Dao (also known as the “Tea Horse Road”)</a> .</p> <h3 id="puerh-tea-cake-and-aging">Pu’erh tea cake and aging</h3> <p>The method of pressing pu’erh tea into cakes was originally developed as a way to <strong>transport the tea over long distances, particularly through the “Tea Horse Road”.</strong> The Tea Horse Road was a network of ancient trade routes that stretched across the mountainous regions of Yunnan and Sichuan provinces.</p> <p>The process of compressing the tea leaves into a cake also helps with the aging and fermentation process, <strong>as it allows the tea to mature and develop its unique flavors over time</strong>. It also increases the tea’s value as it gets older.</p> <iframe id="reddit-embed" src="https://www.redditmedia.com/r/tea/comments/ydvwfw/is_this_puer_tea_i_bought_in_hong_kong_in_2014/?ref_source=embed&amp;ref=share&amp;embed=true" sandbox="allow-scripts allow-same-origin allow-popups" style="border: none;" height="327" width="640" scrolling="no"></iframe> <h3 id="two-types-of-puerh-tea">Two types of Puerh tea</h3> <p>There are two main types of pu’erh tea with totally different taste: <a href="https://en.wikipedia.org/wiki/Pu%27er_tea"><strong>sheng pu’erh (raw/fresh) and shou pu’erh (ripened/cooked)</strong></a>.</p> <ul> <li>Sheng pu’erh is made from raw, unfermented tea leaves and is aged for several years before it is consumed. It is often described as having a complex, fruity flavor and a bright, yellow-green color. <strong>Personerly, I am enjoiy a dry, bitter initial taste, following a wet, sweet aftertaste.</strong></li> <li>Shou pu’erh, on the other hand, is made from fermented tea leaves and has a darker, reddish-brown color and a deep, woody flavor, with a warming, smooth feeling. <strong>Shou pu’erh doesn’t make you exciting but calming and relaxing.</strong></li> </ul> <p><img src="https://d27pcll2dx97vv.cloudfront.net/info/wp-content/uploads/2012/01/puerh_tea_production_process_830.jpg" alt="The Process of Raw and Ripe Pu-erh Tea"/> (Image from <a href="https://www.teaformeplease.com/raw-puerh-vs-cooked-puerh/">Raw Puerh vs Cooked Puerh - Tea for Me Please</a> )</p> <p>Both sheng and shou pu’erh cakes can be stored for long periods of time and are often aged for several years before they are consumed.</p> <h3 id="how-to-brew-it">How to brew it?</h3> <p>To brew pu’erh tea, you will need the following items:</p> <ul> <li>Pu’erh tea leaves. You can gently break the cake and take off the tea leaves.</li> <li>Filtered water.</li> <li>A teapot or a gaiwan (a traditional Chinese lidded bowl used for brewing tea).</li> <li>A tea strainer or infuser</li> </ul> <p>Here is a basic recipe for brewing pu’erh tea:</p> <ol> <li>Bring the water to a boil. <strong>And warming up you teapot or gaiwan with hot water</strong>.</li> <li>Place the tea leaves in the teapot or gaiwan.</li> <li>Pour the hot water over the tea leaves. <strong>The best ratio of tea to water is 1:20</strong>.</li> <li>Steep the tea for 15 seconds to 1 minutes, depending on your desired strength.</li> <li>Strain the tea into cups or a teapot.</li> <li>Repeat step 3, 4 and 5, but keep the infusion short. <strong>Good pu’erh is able to steep for 15 times even more!</strong></li> </ol> <p>The first time of doing step 3 and 4, you can rinse tea leaves by pouring a small amount of hot water over them and then discarding the water. This is called <strong>“awakening” the tea</strong> and is believed to help remove any impurities and enhance the flavors of the tea, being sure to use water that is hot but not boiling, as boiling water can damage the tea leaves and affect the flavor of the tea.</p> <iframe width="560" height="315" src="https://www.youtube.com/embed/XnCntK1ks80" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe> <p><strong>'’Tea drunk warning’’ on sheng pu’erh.</strong></p> <ul> <li>Sheng pu’erh contains caffeine. If you are sensitive to caffeine, and drink a large amount of pu’erh tea in a short period, you may experience symptoms of caffeine overdose.</li> <li>Relatively and personally <em>I prefer drink shou pu’erh after dinner, as it has a comforting, warm, and satisfying flavor that can help to relax and soothe the body and mind. Its bold flavor can also help to cut through rich or heavy foods, making it a good choice for digestion.</em></li> </ul> <h3 id="how-to-storage-it">How to storage it?</h3> <p>Proper storage is important for preserving the quality and flavor of pu’erh tea. Here are some tips for storing pu’erh tea:</p> <ol> <li>Keep the tea away from light and moisture: Pu’erh tea should be stored in <strong>a cool, dry, and dark place,</strong> away from direct sunlight and sources of moisture. Exposure to light and moisture can cause the tea to lose its flavor and aroma over time.</li> <li>Use an airtight container: It is important to store pu’erh tea in an airtight container to keep out any air and moisture that may affect the tea’s quality. Glass or ceramic containers with tight-fitting lids are good options.</li> <li>Avoid strong odors: Pu’erh tea can absorb odors from other foods or materials, so it is important to store it away from strong-smelling items.</li> </ol> <p>Hope you enjoy pu’erh tea!</p> <h3 id="other-resources">Other resources</h3> <ul> <li><a href="https://www.teavivre.com/info/difference-between-raw-and-ripe-puerh-tea.html">Understanding the Difference between Raw Pu-erh Tea and Ripe Pu-erh Tea – teavivre</a></li> </ul> <iframe width="560" height="315" src="https://www.youtube.com/embed/xY9w7GezgpU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>]]></content><author><name>Zhihao</name></author><category term="life"/><category term="001"/><category term="notes"/><summary type="html"><![CDATA[What is Puerh tea and how to brew it?]]></summary></entry><entry xml:lang="eng"><title type="html">Cross-country skiing 001</title><link href="https://zhihaol.eu.org/blog/2022/Crosscountry-skiing-001/" rel="alternate" type="text/html" title="Cross-country skiing 001"/><published>2022-12-26T00:00:00+00:00</published><updated>2022-12-26T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2022/Crosscountry-skiing-001</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2022/Crosscountry-skiing-001/"><![CDATA[<p>This is a tutorial for beginners with materials from YouTube mainly.</p> <h2 id="the-taste-of-cross-country-skiing">The taste of cross-country skiing</h2> <p>Cross-country skiing, also known as Nordic skiing, differs from alpine skiing (downhill skiing) by having skis with <strong>an unfixed heel</strong> that enables skiers to cross forests and mountains.</p> <p>Contrary to downhill skiing’s thrilling focus, cross-country skiing can be both intense and peaceful. (1) cross-country demands much more workout when uphill because there is no ski lift (2) skiing with dogs and crossing the flat forest can be extremely peaceful. Below are my favorite videos.</p> <iframe width="560" height="315" src="https://www.youtube.com/embed/Bkql4akV5XU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe> <iframe width="560" height="315" src="https://www.youtube.com/embed/jmGgriw7lmU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe> <h2 id="lesson-0-equipments-and-clothing">Lesson 0: Equipments and clothing</h2> <p>There are four types of skis available:</p> <ul> <li><strong>Classic skis</strong> are designed for use on groomed trails and are the most common ones.</li> <li><strong>Skate skis</strong> are designed for use on groomed trails and are wider and shorter than classic skis. They have a stiffer flex and a non-waxable base, and they are typically used in a skating motion to propel the skier forward.</li> <li><strong>Touring skis</strong> are designed for backcountry use.</li> <li><strong>Telemark skis</strong> are designed for use in backcountry terrain and are typically wider and shorter than touring skis.</li> </ul> <p>Here I suggest starting with <strong>classic skis</strong>, which are <strong>10 to 20 cm longer than your height</strong>. There are typically two types of binding, NNN and STS, so be sure you get compatible boots.</p> <p><img src="https://i.imgur.com/3lUhiyO.png" alt=""/></p> <p>(Image edit from internet)</p> <p>The picture above also reminds us how to dress properly . (1) no cotton but fast drying, breathable synthetic clothing (2) be light and flexible, no need to dress like downhill skiers but like a runner.</p> <h2 id="lesson-1-gain-your-balance---from-static-to-dynamic">Lesson 1: Gain your balance - From static to dynamic</h2> <p>While we stand still, the weight is exactly beneath the feet. However, It is better to give up the feeling of standing still. Once you stand on skis and start moving, it involves <a href="https://nordicskilab.com/courses/learn-diagonal-stride/">dynamically shifting weight between two skis rather than standing still on skis</a>.</p> <p>Check the video below, in the first 3 minutes it demonstrates:</p> <ul> <li><strong>Practice transferring your weight</strong> (00:30)</li> <li><strong>Kick and glide</strong>. When we put all weight in one ski, the ski depresses, so that we can use the kick zone to generate a gliding forward (01:05 - 03:15). <a href="https://tahoetrailguide.com/cross-country-skiing-explained-part-1-introduction-to-classic-cross-country-skis/">This is how the skis are designed to work</a></li> </ul> <iframe width="560" height="315" src="https://www.youtube.com/embed/SuKn-acPvVk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe> <p>I also recommend the video below, which contains the following points:</p> <ul> <li>The ready stance (04:30). You can also jump with skis to feel the normal ready stance. Normally the hands are always in front of the body.</li> <li>The camber of the skis (05:40). This help you understand the what happens to skis when you kick and glide.</li> <li>How to fall and stand up (06:05)</li> <li>Practice standing on one ski (transferring your weight) (07:20)</li> <li>Step turn (transferring your weight) (08:00)</li> </ul> <iframe width="560" height="315" src="https://www.youtube.com/embed/VfwKAU4zaJM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe> <h2 id="lesson-2-double-stride-and-diagonal-stride">Lesson 2: Double stride and Diagonal stride</h2> <p>Now it’s time to use poles. <strong>Double stride is the basic poling motion of cross-country skiing. Diagonal stride that combines polling with the shuffle-and-glide</strong>, which you may need extra days to master.</p> <p>The first video:</p> <ul> <li>Double stride (03:10 - 05:45).</li> <li>Diagonal stride (05:45 - 07:00)</li> </ul> <p>The second video:</p> <ul> <li>Double stride (09:45 - 12:15).</li> </ul> <h2 id="lesson-3-snowplow-and-turning">Lesson 3: Snowplow and turning</h2> <p>Snowplowing is a wedge (V shape) to increase the edge contact with snow and gain extra force to uphill or to slow down while downhill. The key of turning is still transferring your weight from one side to another side. If you do it step by step, that is stepping turn. If you do it constantly, that is C shape turning.</p> <p>The first video:</p> <ul> <li>Snowplow (uphill herringbone) (07:00)</li> <li>Snowplow to downhill - slow down skills (08:50 - 10:50)</li> <li>Stepping turn (11:00)</li> </ul> <p>The second video:</p> <ul> <li>Snowplow (12:15 - 15:30).</li> <li>Step in&amp;out of the tracks (15:30 - 19:10).</li> <li>Uphill herringbone (25:30 - 27:00).</li> <li>C shape turning (28:20 - 29:15).</li> </ul> <p>After the first three lessons (approximately 3 hour’s practice), you can survive in the Nordmarka area. Falling down while learning is unavoidable in the first month, but every time it increases your sense of balance.</p> <h2 id="lesson-4-skating">Lesson 4: Skating</h2> <p>If you also want to master skate skiing, the video below would be beneficial.</p> <iframe width="560" height="315" src="https://www.youtube.com/embed/-yr0YtQ_UDQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe> <iframe width="560" height="315" src="https://www.youtube.com/embed/ZFPttSGcaSI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe> <p>Is that too easy for you. Here are advanced skills:</p> <ul> <li>Parallel turning.</li> <li>Telemarking turning.</li> <li>Hockey stop.</li> </ul> <h2 id="my-favorite-online-resources">My favorite online resources:</h2> <p><strong>Useful links:</strong></p> <ul> <li> <p><a href="https://www.skiforeningen.no/">Skiforeningen - the map of ski tracks in Oslo</a></p> </li> <li> <p><a href="https://www.bua.no/">BUA - rent free skis for free in Oslo</a></p> </li> <li> <p><a href="https://www.sio.no/en/sports/sio-athletica-offers-ski-rental">SiO Athletica - Rent skis for entire season in cheap price</a></p> </li> </ul> <p><strong>All in one YouTube video list</strong></p> <ul> <li><a href="https://www.youtube.com/@JaredManninen">Cross-Country Skiing Technique &amp; Demonstrations - Jared Manninen</a></li> <li><a href="https://youtube.com/playlist?list=PL1bOaWHI_iMu2ENFQJmZmblpdGVzAGCPi">X-C ski and telemark technique videos</a></li> </ul> <p><strong>The equipment</strong></p> <ul> <li><a href="https://www.rei.com/learn/expert-advice/crosscountry-ski-touring-gear.html">Cross-Country Skiing Equipment Guide REI Co-op</a></li> <li><a href="http://xcskiing.ca/equipment.html">Equipment for first time Cross-Country Skiers (xcskiing.ca)</a></li> <li><a href="http://xcskiing.ca/wax-guide.html">Waxing Your Skis - a Beginner’s Guide (xcskiing.ca)</a></li> <li><a href="https://tahoetrailguide.com/cross-country-skiing-explained-part-2-geometry-of-classic-cross-country-skis/">XC Skiing Explained (Part 2): Geometry of Classic Cross-Country Skis - Tahoe Trail Guide</a></li> </ul> <p><strong>Techniques</strong></p> <ul> <li><a href="http://xcskiing.ca/beginners.html">Cross-Country Skiing for Absolute Beginners (xcskiing.ca)</a></li> <li><a href="https://nordicskilab.com/tracks/">Beginner Lessons – Nordic Ski Lab</a></li> <li><a href="https://crosscountryskiingplanet.com/best-cross-country-skiing-youtube-videos/">Best Cross-Country Skiing Youtube Videos - Cross-Country Skiing Planet (crosscountryskiingplanet.com)</a></li> </ul> <iframe width="560" height="315" src="https://www.youtube.com/embed/Cqo3yu-j890" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe> <iframe width="560" height="315" src="https://www.youtube.com/embed/7URFFSSw1co" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>]]></content><author><name>Zhihao</name></author><category term="sports"/><category term="withme"/><category term="norge"/><category term="001"/><category term="notes"/><summary type="html"><![CDATA[Learn XC skiing with me]]></summary></entry><entry xml:lang="eng"><title type="html">Becoming a Full-Stack Geodata Scientist</title><link href="https://zhihaol.eu.org/blog/2022/full-stack-geodata-scientist/" rel="alternate" type="text/html" title="Becoming a Full-Stack Geodata Scientist"/><published>2022-12-25T00:00:00+00:00</published><updated>2022-12-25T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2022/full-stack-geodata-scientist</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2022/full-stack-geodata-scientist/"><![CDATA[<h4 id="q-what-is-the-difference-between-data-scientist-and-full-stack-data-scientist">Q: what is the difference between data scientist and full stack data scientist?</h4> <p>A data scientist is typically someone who has a strong background in mathematics, statistics, and computer science, and is skilled at using these tools to extract insights from data. They might work with a variety of data sources and use a range of techniques to analyze and interpret the data, including machine learning algorithms and statistical modeling.</p> <p>A full stack data scientist is similar to a data scientist, but with the <strong>added ability to work with data at all stages of the data pipeline</strong>. This might include tasks such as <strong>data collection and ingestion, data storage and management, data processing and transformation, and data visualization and reporting</strong>. Full stack data scientists are often comfortable working with a variety of tools and technologies and have the ability to design and build complete data pipelines.</p> <h4 id="q-what-is-the-difference-between-geodata-scientist-and-data-scientist">Q: What is the difference between geodata scientist and data scientist?</h4> <p>A geodata scientist is a type of data scientist who specializes in working with geospatial data. This may include analyzing, visualizing, and modeling geodata using GIS software and other specialized tools.</p> <p>A data scientist, on the other hand, is a professional who uses data to extract insights, inform decision making, and solve problems in a variety of contexts. While both roles may involve working with data, a geodata scientist is likely to have a more specific focus on geospatial data and the use of GIS techniques.</p> <h4 id="q-in-the-long-run-i-want-to-be-a-full-stack-data-scientist-with-a-focus-on-geodata-what-i-can-do">Q: In the long run, I want to be a full stack data scientist with a focus on geodata, what I can do?</h4> <p>Sure! It sounds like you have a clear idea of where you want to go in your career. To achieve your goal of becoming a full stack data scientist with a focus on geodata, there are a few steps you might consider taking:</p> <ol> <li>Data Engineering: This involves working with large datasets and developing the infrastructure to store, process, and analyze the data. This could include learning programming languages such as Python or Java, as well as technologies like <code class="language-plaintext highlighter-rouge">Hadoop</code> and <code class="language-plaintext highlighter-rouge">Spark</code>.</li> <li>Data Visualization: Being able to effectively communicate your findings through data visualization is important in any data science role. You may want to learn tools like <code class="language-plaintext highlighter-rouge">Tableau</code> or <code class="language-plaintext highlighter-rouge">D3.js</code> to enhance your visualization skills.</li> <li>Machine Learning: As a geodata scientist, you may want to focus on machine learning techniques that are particularly relevant to geospatial data. This could include spatial statistics and geostatistics, as well as advanced machine learning techniques like deep learning.</li> <li>Front-End Development: As a full stack geodata scientist, you should also have some proficiency in front-end development. This could involve learning HTML, CSS, and JavaScript, as well as frameworks like <code class="language-plaintext highlighter-rouge">React</code> or <code class="language-plaintext highlighter-rouge">Angular</code>.</li> </ol> <p>Overall, the key to becoming a full stack geodata scientist is to continually learn and stay up-to-date with the latest technologies and techniques in the field. This may involve taking online courses, participating in hackathons, or contributing to open source projects.</p> <h4 id="q-so-for-those-areas-you-just-recommended-can-you-give-the-name-of-the-book-or-courses-that-i-can-go-and-start-study-immediately">Q: So, for those areas you just recommended, can you give the name of the book or courses that I can go and start study immediately</h4> <p>Certainly! Here are some resources you might find helpful for improving your skills as a full-stack geodata scientist:</p> <ol> <li><strong>Data Science Fundamentals</strong>: This course, offered through Coursera, covers the fundamentals of data science and is a good starting point for anyone looking to enter the field.</li> <li><strong>Data Science with Python</strong>: This book, written by Jake VanderPlas, is a comprehensive introduction to data science using Python. It covers a wide range of topics including data manipulation, visualization, machine learning, and more.</li> <li><strong>Full Stack Web Development</strong>: This course, offered through Udemy, provides a comprehensive introduction to web development and teaches you the skills you need to build your own web applications.</li> <li><strong>Full Stack Deep Learning</strong>: This course, also offered through Udemy, covers the latest advancements in deep learning and how to apply them to real-world problems. It’s a great resource for anyone interested in using deep learning to analyze and interpret geodata.</li> </ol> <p>I hope these resources are helpful in your journey to become a full-stack geodata scientist! If you have any further questions, don’t hesitate to ask.</p> <h4 id="q-can-you-write-a-guide">Q: Can you write a guide?</h4> <p>Sure, here is an outline for an article with the title “The Journey to Becoming a Full Stack Geodata Scientist”:</p> <p>I. Introduction</p> <ul> <li>Definition of full stack geodata scientist</li> <li>Importance of geodata in the digital age</li> </ul> <p>II. Essential Skills for a Full Stack Geodata Scientist</p> <ul> <li>Geospatial data acquisition and processing</li> <li>Geodata visualization and presentation</li> <li>Geodata modeling and analysis</li> <li>Geodata management and storage</li> </ul> <p>III. Education and Training Options</p> <ul> <li>Bachelor’s and master’s degree programs in geospatial science</li> <li>Online courses and certifications in geodata science</li> <li>Professional development workshops and conferences</li> </ul> <p>IV. Real-World Experience and Practice</p> <ul> <li>Applying geodata skills in internships and entry-level positions</li> <li>Working on personal projects and open source contributions</li> <li>Collaborating with interdisciplinary teams on geodata-based projects</li> </ul> <p>V. Career Opportunities for Full Stack Geodata Scientists</p> <ul> <li>Industry roles in energy, transportation, environmental science, and more</li> <li>Research and academic positions in geospatial science</li> <li>Entrepreneurial opportunities in the geodata market</li> </ul> <p>VI. Conclusion</p> <ul> <li>The demand for full stack geodata scientists is growing</li> <li>With the right education, experience, and skills, you can become a full stack geodata scientist and make a meaningful impact in your field.</li> </ul> <h4 id="q-thanks">Q: Thanks.</h4> <p>You’re welcome! I’m happy to help. If you have any other questions or need further assistance, please don’t hesitate to ask. Good luck on your journey to becoming a full stack geodata scientist!</p>]]></content><author><name>openGPT</name></author><category term="geodata"/><category term="datascience"/><category term="notes"/><summary type="html"><![CDATA[a talk with openGPT about career planning]]></summary></entry><entry><title type="html">Field Trip to Ice Age Museum</title><link href="https://zhihaol.eu.org/blog/2022/Quaternary-geomorphology-of-Norway/" rel="alternate" type="text/html" title="Field Trip to Ice Age Museum"/><published>2022-11-20T00:00:00+00:00</published><updated>2022-11-20T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2022/Quaternary-geomorphology-of-Norway</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2022/Quaternary-geomorphology-of-Norway/"><![CDATA[<h2 id="1-introduction">1 Introduction</h2> <p><em>Glaciers</em>, a slowly moving mass or river of ice, have shaped the landscapes, scouring out rock and sediments and depositing thick debris<d-cite key="benn.evans_2010"></d-cite>. This process over a period is called <em>glaciation</em>. The warm inter-period or process, during which glacier retreat, is <em>deglaciation</em>.</p> <p>Instead of being only tourist attractions, glaciers and their geomorphic conditions have strong ties to human society, including culture, economics, water resources and climate concerns and so on. This report is aimed to present the glacial and periglacial geomorphology story of Norway with the materials from the field trip of GEO4410, 2022 and the follow-up lab exercises. The main objectives are to illustrate:</p> <ul> <li>The connection between the geomorphology process and nowadays society’s concerns.</li> <li>The common definitions, concepts and methodologies in geomorphology and periglacial environment.</li> <li>The process and impact of deglaciation, particularly the collapse of the Eurasian ice sheet complex (EISC) and the permafrost thawing.</li> <li>The links between fieldwork and the literature.</li> </ul> <h3 id="11-the-glacier-heritage-in-figures">1.1 The glacier heritage in figures</h3> <h4 id="landscape">Landscape</h4> <p>How glaciers have changed Norway? Here are some <strong>figures</strong>.</p> <p>Ice sheets, or glaciers in milder periods largely affected the Norwegian landscape, from dramatic western coastlines, deep valleys and fjord to alpine relief. The vertical linear glacier erosion along fjords amounts to <strong>1500 m - 2000m</strong>. A mean bedrock has been lowered of <strong>520 m</strong> through the Quaternary glaciations in Mid-Norway <d-cite key="mangerud.etal_2011"></d-cite>.</p> <p>The model reconstruction shows there was a huge ice sheet named the Eurasian ice sheet complex (EISC) with a span of over <strong>4500 km</strong> during the last glacier period<d-cite key="patton.etal_2017"></d-cite>. It extended to as west as Ireland, crossed the entire Scandinavia and Poland, and reached as far as Siberia, covering both land and sea (the North-Barents-Kara Seas). The ice divide was <strong>over 2000-2500 m</strong> before the Norwegian Channel Ice Stream lowered the ice surface <d-cite key="mangerud.etal_2011"></d-cite>, which means the place where we stand during the trip, the ice divide, was covered bymore than a thousand of meters of the ice sheet.</p> <p>EISC is just one of the ice sheets near us. There were <strong>eight glacial cycles in the past 740 thousand years</strong> <d-cite key="augustin_2004"></d-cite>, probably about 40 cycles in total within Quaternary glaciation. Each time, the new advanced ice sheet removed most of the older deposits and deepen the fjords more. Thus, the Quaternary landscape nowadays is the cumulative result of numerous glacier cycles with the fresh one on the top.</p> <h4 id="hydropower">Hydropower</h4> <p>Among European countries, Norway was a relatively late industrializer. By the end of the nineteenth century, only <strong>11.9 percent</strong> of the population was employed in manufacturing. The hydropower-related industries boomed after <strong>140 hydropower plants</strong> were constructed between 1890-1920<d-cite key="leknes.modalsli_2019"></d-cite>.</p> <p>Now, hydropower produces large amounts (<strong>&gt;90%</strong>) of clean and cheap electrical energy, so Norwegian’s industry and transportation are benefiting from electrification. For instance, the aluminum industry can sustain competitiveness without bauxite resources in domestic. Moreover, Norway has <strong>almost half</strong> of Europe’s reservoir capacity<d-cite key="graabak.etal_2017"></d-cite>. Being a water battery of Europe, Norway is able to balance the deployment of variable renewable energies on all timescales, from seasonal to instantaneous.</p> <p><img src="https://i.imgur.com/wu88I4P.jpg" alt="Not just landscape, glaciers leave hydropower and industry to Norway. Case of Odda"/> <strong>Figure 1.</strong> The glacier stories in town Odda</p> <p>The country’s topography contributes to these advantages. Heavy precipitation of <strong>1000 to 3000 mm</strong> per year is common in coastal areas when the moist air is uplifted by western mountains. The water is stored at high places where there is no need for resettlements because the lakes and valleys created by glaciers serve as natural reservoirs. The glacier scraped the rock, making it easy to build dams and reducing sedimentation problems in reservoirs <d-cite key="graabak.etal_2017"></d-cite>.</p> <p>Odda is a typical industrial town located at the valley’s bottom (Figure 1). It tells two versions of the glacier story. Ringedals dam, one of Europe’s largest gravity dams when it was built in 1909, made Odda famous for its industrial products in the past, which is the old story. In modern times, Odda is more well-known for Trolltunga, a spectacular geological site 700 m above the reservoir, formed by a glacier sliding below.</p> <h4 id="agriculture">Agriculture</h4> <p>It takes a long time to sort sediments by water, deposit it in flat areas, and weather it into farmable soil. After the wipe-up of the ice sheets, Norway doesn’t inherit productive soil older than the nearest ice era. Most areas have commonly <strong>&lt;1 m</strong> sediments cover upon bedrock <d-cite key="olsen.etal_2013"></d-cite>. Due to climate limitations, wheat was farmed up until the warm medieval era (1100-1300 AD) in southern Norway<d-cite key="easterbrook_2016"></d-cite>. Even today Norway does not have any sugar crops. The poor basis of agriculture makes Norway a poor country before the industrial era. On other hand, the will for the self-sustainability of agriculture makes Norway out of European Union in the vote.</p> <p>Luckily, although being few in size, the precious farmland can still be found upon glaciolfluvial, fluvial sediments and marine deposits in lowland areas adjacent to and under the former ice divided in southeastern Norway, where the average Quaternary sediment thickness is estimated to ca. <strong>6 m</strong>, similar to Sweden<d-cite key="olsen.etal_2013"></d-cite>.</p> <h3 id="12-beyond-the-present-is-the-key-to-the-past">1.2 Beyond the present is the key to the past</h3> <p>During the field trip, we visited Jotunheim and Dovrefjell area in southern Norway. Assuming that the natural processes continue occurring and follow the same laws, we infer what happened in past by what we have seen today. This is a basic geoscience principle:</p> <blockquote> <p>The present is the key to the past. – Charles Lyell</p> </blockquote> <p>Today, people are also curious about what can we learn from the past. The past is the key to the future as well. The instability of marine-based ice sheets, e.g. the West Antarctic Ice Sheet today, or EISC back to the LGM, is the tipping element of the climate system. Understanding past responses of ice sheets to past climate change provides an important long-term context for observations of present, and projected future, ice-sheet dynamics.<d-cite key="regnell.etal_2021, sejrup.etal_2022"></d-cite></p> <h2 id="2-definition-and-concepts">2 Definition and concepts</h2> <p>As described in the introduction, when there were glaciation &amp; deglaciation events, we need to know <em>when</em>, <em>who</em> and <em>why</em> it happened and <em>how</em> we can study it.</p> <h3 id="21-when">2.1 When</h3> <p>Earth is estimated to be 4.5 billion years old. The IPCC AR6 report described high confidence to assert that the last time CO2 levels were as high as the present was at least 2 million years (Ma) ago. The oldest modern human fossils in Ethiopia were dated around 233 thousand years (kyr) old<d-cite key="vidal.etal_2022"></d-cite>. All stories need a temporal context (Figure 2). <img src="https://i.imgur.com/selcXrM.png" alt="Time scale and Glaciation in the past 5 million years"/> <strong>Figure 2.</strong> The time scale, temperature and deglaciation from pre-Quaternary to the present.<d-cite key="alley_2000, moore.une_2016"></d-cite></p> <p>On timescales of hundreds of million years, there are five to six ice ages (icehouse conditions), accompanied by periods of little or no ice cover (greenhouse conditions). Now Earth is currently in the Quaternary Ice Age, specifically, an <strong>interglacial period</strong> of the <strong><em>Quaternary glaciation</em></strong>.</p> <p>In Scandinavia, old mountain areas were worn down, resulting in the flat surface near sea level, called <em>peneplain</em> in the <strong>Paleogene</strong> (66 Ma - 23 Ma). Land rose into a mountain plateau (<em>paleic surface</em>) with the fluvial erosional processes in the <strong>Neogene period</strong> (23 Ma - 2.58 Ma).</p> <p>The <strong><em>Quaternary period</em></strong> started around 2.58 Ma ago until the present with the fluctuation of climate and glacial cycles, driven by Earth’s orbital variations (now known as <em>Milankovitch cycles</em>). The glacial erosion started dominating.</p> <p>The <strong>Eemian</strong> (c.115 kyr) marked the end of <strong>the last interglacial</strong> and the start of <strong>the last glacial period (LGP)</strong>. In Europe, three ice caps, Celtic, Fennoscandian, and Barents Sea grew in LGP and merged into the Eurasian ice sheet complex (EISC) at <strong>the last glacial maximum (LGM, c.27 kyr -20 kyr)</strong>. EISC transported large sediments from continents to the deep sea and left ice streams channels on the continental shelf, which is proved by data from offshore exploration activities <d-cite key="sejrup.etal_2004"></d-cite>.</p> <p><strong>The Bølling–Allerød interstadial</strong> (c.14.7 kyr - 12.9 kyr) is a short warm period when EISC collapsed and contributed 4.5-7.9 m sea-level rising over 500 years<d-cite key="brendryen.etal_2020"></d-cite>, followed by a sudden cold interruption, <strong>the Youngers Dryas</strong> (YD, c. 12.9 kyr - 11.7 kyr) for unclear reasons. Some ice sheets and glaciers readvanced in this period. There was an ice sheet covering the present coastlines, and the isostatic depression made the land sinking, such as the Oslo area the marine limit marked the local sea level up to 225 m.</p> <p>The recent 11.7 kyr is <strong>the Holocene</strong> epoch. As the remains of EISC, the Fennoscandian ice sheet (FIS) continued retreating and separating into a southern part near Jotunheimen and a larger part in the northern Swedish mountains. FIS finally disappeared at 8.7 kyr <d-cite key="patton.etal_2017"></d-cite> with some high-altitude ice remnants<d-cite key="lane.etal_2020"></d-cite>.</p> <p>Climate models show that the <strong>Mid-Holocene warm period (c. 9 kyr - 5 kyr)</strong> pronounced warming at high latitudes, including Greenland, Western Arctic, and Northern Europe, where the temperature could be 2-3 °C warmer than today<d-cite key="park.etal_2019"></d-cite>. All mountain glaciers in Norway are believed to melt away after this period.</p> <p>The Vikings established a colony on an island and call it Greenland during the <strong>Medieval warm period</strong> (1100-1300 AD). But soon, there was the largest glacier oscillation in historical times, <strong>the little ice age</strong> (16th - 19th centuries). Re-advance of glaciers went down mountains in many records and left margin moraines, e.g. the one we saw in Glacier Storbreen.</p> <p>1850 AD to the present is under the context of modern climate change. In the future, the detonation of the first atomic bomb in 1945 may mark the beginning of the <strong>Anthropocene epoch</strong> (1945 - Present).</p> <h3 id="22-who">2.2 Who</h3> <p><strong>Table 1.</strong> Glacier erosional and depositional landforms.</p> <table> <thead> <tr> <th>Landforms</th> <th>Type</th> <th>Scale</th> <th>Indicate</th> <th>Where or texture</th> </tr> </thead> <tbody> <tr> <td>Striae</td> <td>erosion</td> <td>small</td> <td>ice flow</td> <td>bedrock</td> </tr> <tr> <td>Rock drumlin</td> <td>erosion</td> <td>medium</td> <td>ice flow</td> <td>bedrock</td> </tr> <tr> <td>Roches moutonnees</td> <td>erosion</td> <td>medium</td> <td>ice flow</td> <td>bedrock</td> </tr> <tr> <td>Troughs and Fjords</td> <td>erosion</td> <td>large</td> <td>cumulatively</td> <td>bedrock</td> </tr> <tr> <td>Cirques</td> <td>erosion</td> <td>large</td> <td>cumulatively</td> <td>bedrock</td> </tr> <tr> <td>Fluting</td> <td>moraine</td> <td>medium</td> <td>ice flow</td> <td>Subglacier, hard to preserve</td> </tr> <tr> <td>Drumlins</td> <td>moraine</td> <td>meidum</td> <td>ice flow</td> <td>Subglacier</td> </tr> <tr> <td>Ribbed terrain</td> <td>moraine</td> <td>medium</td> <td>ice sheet</td> <td>Subglacier</td> </tr> <tr> <td>Eskers</td> <td>meltwater</td> <td>medium</td> <td>warm-base,ice margin</td> <td>Subglacier,sorted silts, sands, gravels and boulders</td> </tr> <tr> <td>Marginal moraines</td> <td>moraine</td> <td>medium</td> <td>ice margin</td> <td>unsorted</td> </tr> <tr> <td>Marginal water channels</td> <td>meltwater</td> <td>medium</td> <td>Cold-base, ice height, ice margin</td> <td>on slope, as a sequence</td> </tr> <tr> <td>Potholes</td> <td>meltwater</td> <td>medium</td> <td>Water channels</td> <td>on bedrock or sediments</td> </tr> <tr> <td>Ice dammed lakes</td> <td>meltwater</td> <td>-</td> <td>Flood event, lakes origin</td> <td> </td> </tr> <tr> <td>Glacifluvial deposit</td> <td>meltwater</td> <td>-</td> <td>Water channels</td> <td>on delta, outwash,lake bottom. Sorted.</td> </tr> </tbody> </table> <h4 id="221-ice-marginal-landforms">2.2.1 Ice-marginal landforms</h4> <p>When we walk towards a glacier, frequently we see the sediments concentrated in the foreland, including end moraines and glaciofluvial deposits that generally mirror the shape and position of former ice margins.</p> <p><img src="https://i.imgur.com/yzAooqj.jpg" alt=""/> <strong>Figure 3.</strong> The west tongue of the Glacier Storbreen</p> <p>The figure above shows a picture of the glacier Storbreen. The <em>lateral-front moraine</em> (end/ marginal moraine) marked a sequence of the margin of Storbreen from the Little Ice Age to the present. It retreated approximately 1.8 km in around 270 years from 1150 m.s.l. back to 1410 m.s.l. The meltwater channels in the north outlet dissect the moraines, which reminds us the landscape features could be erased or modified by newer processes.</p> <p>The marginal moraine is an excellent indicator of ice extent as (1) the dating technique can link the location with ages, and (2) marginal moraines are middle-size landforms and can be marked in the field or by DEM and aerial photos.</p> <p>The <em>marginal (lateral) meltwater channels</em> are other features easy to recognize on the field, which are typically tens of meters deep, meters wide, and hundreds of meters long, and usually form in subparallel down-slope sequences <d-cite key="stroeven.etal_2015"></d-cite>, as shown in Figure below.</p> <p>If the water cannot reach the bed, perhaps because the glacier is frozen to its bed (polythermal or cold-based glaciers, few temperate-case), the streams may flow to the sides of the glacier, and excavate lateral meltwater channels. Lateral channels may terminate abruptly where the meltwater drained down englacial or subglacial tunnels <d-cite key="benn.evans_2010"></d-cite>.</p> <p><img src="https://i.imgur.com/2vVBuZY.png" alt=""/> <strong>Figure 4.</strong> The marginal meltwater channels</p> <h4 id="222-subglacial-landforms">2.2.2 Subglacial landforms</h4> <p>Subglacial exhibit a variety of landforms as a result of glacier, glaciofluvial erosion and sediment:</p> <ul> <li><em>ice-moulded bedrock</em>, <em>rock drumlins</em>, <em>Roches moutonnee</em>.</li> <li><em>ribbed terrain</em>, <em>fluting</em>, <em>drumlins.</em></li> <li><em>subglacial meltwater channels</em>, <em>eskers</em>, <em>potholes</em>.</li> </ul> <p><em>Ice-moulded bedrock</em>: When the ice is sliding upon the bedrock, the abrasion or quarrying process happens, and leaves a polished surface, striae, fractures (Figure 5) and plucked lee side because of the pressure difference. For the same reason but at a bigger scale, rock drumlins or Roches Moutonnee formed.</p> <p><em>Ribbed terrain (Rogen moraine)</em>, <em>fluting</em>, and drumlins are deposited landforms. The motion of ice led to the deformation of the soft sedimentary bed (Figure 6). And the lee of obstruction on the bed causes the linear features, which vary from fluting to mega-fluting, further to mega-scale glacial lineations(MSGL), drumlins and Rogen moraines.</p> <p><img src="https://i.imgur.com/qu8C3Kl.jpg" alt=""/> <strong>Figure 5.</strong> The abrasion and quarrying process</p> <p><img src="https://i.imgur.com/B2FFj5x.jpg" alt=""/> <strong>Figure 6.</strong> Rock drumlin(a), Drumlin(b), Fluting(c) and transformation between Rogen moraine and drumlins<d-cite key="lundqvist_1989"></d-cite> (d).</p> <p><em>Subglacial meltwater channels</em> can form networks, similar to those that form on the ground today. Flow is driven by pressure gradients as well as elevation, so these channels can flow uphill and therefore have undulating long profiles.<d-cite key="benn.evans_2010"></d-cite> In contrast to marginal meltwater channels, subglacial meltwater channels are more associated to temperate, wet-based glaciers and ice sheets.</p> <p><em>Eskers</em> are sorted sand and gravel ridges in subglacial tunnels deposited by meltwater (Figure 4). Eskers can go uphill because the subglacial meltwater is driven by pressure, which is related to ice thickness rather than the slope of the bed. So, eskers are parallel to ice flow and transverse to the ice terminus and can be used to reconstruct the slope of the ice surface<d-cite key="butcher_2022"></d-cite>.</p> <p><em>Potholes or kettle holes</em> could be found on bedrock or deposited delta.</p> <h4 id="223-proglacial-lakes-and-ice-dammed-lakes">2.2.3 Proglacial lakes and Ice-dammed lakes</h4> <p><em>Proglacial lakes</em>, <em>Ice-dammed lakes</em>, <em>shorelines</em>, <em>raised deltas</em>, <em>out-wash</em> and, fluvial sediments are associated with the ice margin landform, providing information on deglaciation patterns.</p> <p>Where ice margins, either marginal moraine or ice, block the natural drainage of ice-free catchments, water ponding may lead to the formation of <em>ice-dammed lakes</em> <d-cite key="stroeven.etal_2015"></d-cite>. This was common when the ice divide moved to the south of the water dived after LGM. The baltic sea is an ice lake originally (Figure 7).</p> <p>The shorelines and delta prove the lake’s existence and reflect the water level of the lake. For instance, Grimsmoen is the delta located at the tributary valleys (Figure 7, 8). It covers 13.95 km2 and indicates the water level of the glacial lake Nedre Glåmsjø, which is believed larger than 1500 km2 by Holmsen (1915). However, the map shows that the lake’s extent does not reach Grimsmoen(ca. 700 m.s.l.) because of the Rugldalen spillway (665 m.s.l). The formation of the Grimsmoen delta may be earlier than the lake Nedre Glåmsjø in Figure 7.</p> <p><img src="https://i.imgur.com/ytlo6IF.jpg" alt=""/> <strong>Figure 7.</strong> Ice divide and ice dammed lake Nedre Glomsjø <d-cite key="hogaas.longva_2018, stroeven.etal_2015"></d-cite></p> <p><img src="https://i.imgur.com/MfmksrF.png" alt=""/> <strong>Figure 8.</strong> Grimsmoen delta marked a big lake in the past</p> <p>The failure of the dam is triggered by ice retreat, rock avalanche or seismic shock when the lake hydrostatic pressure exceeds the ice overburden pressure at the lake outlet, so call <em>Glacier Lake outburst flood (GLOF).</em> Figure 9 gives an example of the Jutulhogget canyon. The east side valley is 100 m lower than the west side. When the ice sheet melted away, the east side water was released first (Figure 7, outbrust direction) and the canyon was cut into deep water channels by the water from the west side valley.</p> <p><img src="https://i.imgur.com/0UzSigu.jpg" alt=""/> <strong>Figure 9.</strong> Jutulhogget canyon</p> <h4 id="224-periglacial-landforms">2.2.4 Periglacial landforms</h4> <p><img src="https://i.imgur.com/AOXGOIm.jpg" alt=""/> <strong>Figure 10.</strong> Permafrost-related periglacial landforms. Photos are taken at Juvvatnet (a: a thermokarst lake upon ice-cored moraine, b: large ice-cored moraines in front of small cirque glacier, c: polygons nets ), Dombas (d: palsa).</p> <p>The <em>thermokarst lake</em>, <em>ice-cored moraine</em>, <em>polygon mark</em> and <em>palsa mire</em>, share a common basis that the <em>permafrost</em> presents below (Figure 10 a,b,c,d).</p> <p><em>Permafrost</em>, a thermal concept, refers to the ground that continuously remains below 0 degrees for two or more years. Above the permafrost is the <em>active layer</em> where the seasonal growth of ground ice can break up rocks (so we see angular rock debris), lift the rock, push it and sort it into <em>polygon nets</em> (Figure 10c). The blockfield acts as an efficient heat bridge to cause a negative ground temperature in winter<d-cite key="juliussen.humlum_2008"></d-cite> making the process mentioned here go easier.</p> <p>When the ice lens grows in organic soil, usually wetland, the surface heave like a low hill or knolls. This landform refer to <em>palsa</em>. The <em>thermal offset</em> makes palsa exist in low altitudes as a permafrost boundary. The organic material is saturated, making the surface layer well insulated from heatwaves in summer, but transfers heat after freezing (acts like ice) in winter. The snow distribution driven by wind is also important for the formation of palsa.</p> <p>Thermokarst is irregular, hummocky terrain, where the subsidence area is often filled with water, hence the name thermokarst lake (Figure 10a).</p> <p>There was a debate about whether the buried glacier ice should be regarded as rock glacier or ice-cored moraines. <d-cite key="barsch_1971"></d-cite> argued that the rock glacier is not active sometimes, but the steep slope of ice-cored moraine could move slowly instead. <d-cite key="ostrem_1971"></d-cite> insisted that the rock glacier must move even if it is slow-moving. And the ice-cored moraine is a stationary deposit. However, it is not easy to recognize due to the lack of accurate field measurements and a clear definition of the term ‘rock glacier’. The ice-rich soil on steep slopes in the area of warm permafrost can deform under the influence of gravity due to the creep of pore ice and the migration of unfrozen pore water. This refers to <em>creeping permafrost</em><d-cite key="french_2007"></d-cite> and permafrost-related hazards.</p> <p>In summary, water expands by 9% when it freezes. Consequently, in the periglacial environment, the frost cracking, frost sorting, and frost push &amp; pull, drive the vertical and lateral movement or redistribution of land features.</p> <h3 id="23-why">2.3 Why</h3> <p>This section discusses several frameworks for discussing glacial and periglacial environments.</p> <h4 id="231-equilibrium-line-altitude-and-permafrost-limit">2.3.1 Equilibrium line altitude and permafrost limit</h4> <p>The <em>equilibrium line altitude (ELA)</em> is the point on a glacier where annual accumulation balances annual ablation <d-cite key="benn.evans_2010"></d-cite>. The ELA concept connects the most important two variables for glaciers, regional climate and topography. The accumulation is from precipitation mainly in winter, and the ablation is the melt-out mainly in summer. Temperate glaciers have both high snowfall and high melting rates.</p> <p>The <em>permafrost limit</em> is the outermost (latitudinal) or lowest (altitudinal) limit of the occurrence of permafrost. About -4 °C <em>mean annual air temperature (MAAT)</em> is believed necessary for alpine permafrost in Scandinavian <d-cite key="etzelmuller.etal_2003"></d-cite>.</p> <p>In southern Norway, from the western coast to the eastern inland, the ELA is from ca. 1000 m to 2000 m due to the distance to moisture getting longer. However, the permafrost limit decreases towards the east due to climate patterns switching from maritime to continental. Etzelmuller described this as a transition from the predominance of glacial processes to the predominance of permafrost-related processes (Figure 11) <d-cite key="etzelmuller.etal_2003"></d-cite>. That reflects why the west coast has temperated glaciers and deep fjords, but eastern inland areas have more cold-base landforms, like ice-cored moraines, and marginal meltwater channels.</p> <p><img src="https://i.imgur.com/V0u0qJ1.png" alt=""/> <strong>Figure 11.</strong> The comparison of ELA and permafrost limit <d-cite key="etzelmuller.etal_2003"></d-cite>.</p> <h4 id="232-erosion-debris-transport">2.3.2 Erosion, debris transport</h4> <p>The glacier buzzsaw hypothesis <d-cite key="egholm.etal_2009"></d-cite> regarded glaciers as highly effective erosion agents, which are strong enough to limit the mountain height. Bedrock erosion has <em>quarrying</em> and <em>abrasion</em> as two basic mechanisms (Figure 5). Both abrasion and quarring depend on the sliding velocity, in turn, depends on the ice thickness, the ice surface slope, the effective pressure at the bed and the subglacial hydrology. In a word, the rate of erosion is a simple function of the basal sliding speed <d-cite key="herman.etal_2021"></d-cite>: \(\dot{e}=K_{g}\left| u_{s} \right|^l\)</p> <p>Where ̇e is the erosion rate, u_s is the glacier sliding velocity, K_g is a function of lithology bedrock resistance to erosion and l is an exponent. As the climate varies, the glacier mass balance changes, thereby resulting in changes in glacier length, thickness and velocity, and, in turn, the erosion rate <d-cite key="herman.etal_2021"></d-cite>.</p> <p>During the winter, low temperatures and low melting water reduce sliding, erosion and transport. With an increment of temperature in Spring, the subglacial water becomes pressurized and increases transport, sliding and erosion. Towards to the end of summer, channels are well defined and allow for a higher ice-bed contact, which results in cracks in the bedrock and faster failure along pre-exsiting cracks <d-cite key="herman.etal_2021"></d-cite>.</p> <p><img src="https://i.imgur.com/7MqJHzy.png" alt=""/> <strong>Figure 12.</strong> The glacier debris transport</p> <p>Not just transporting the basal debris, the glacier also transports debris supraglacial, and englacial. The steeper mass balance gradient, the higher velocities, for instance, the marine glaciers in western Norway (Figure 12). Finally, 90% of sediments were transported into the sea. The erosion rate was estimated to be c. 20 cm/kyr based on the volumes of the offshore sediment volumes <d-cite key="olsen.etal_2013"></d-cite>. However, the erosion of onshore valleys and fjords can only explain 61% - 66 % of the offshore sink volume <d-cite key="pedersen.etal_2021"></d-cite>, which raised debates about the paleosurface and the thickness of the ice sheet.</p> <h3 id="24--how">2.4 How</h3> <h4 id="241-dating-technique">2.4.1 Dating technique</h4> <ul> <li><em>Radiocarbon dating</em>: based on the burial of organic materials.</li> <li>Burying dating: based on the burial of sand through <em>optically-stimulated luminescence (OSL)</em> and the exposure of quartz-bearing clasts. Requires: <ul> <li>sufficient exposure during transportation</li> <li>no re-exposure <strong>after burying</strong>.</li> </ul> </li> <li>Exposure dating: based on exposed bedrock through measuring concentrations of <em>terrestrial cosmogenic nuclides (TCN).</em> Samples are extracted from boulders on end moraine and bedrock. Requires: <ul> <li>Samples are shielded from cosmic rays prior to the last deglaciation. Otherwise, cause old age.</li> <li>Samples are <strong>continuously exposed</strong> to the full flux of cosmic rays since deglaciation. Otherwise cause young ages.</li> </ul> </li> <li><em>Schmidt-Hammer Exposure-Age Dating (SHD)</em>.</li> </ul> <p>Schmidt hammer measurements reflect the compressive strength of a rock surface which is assumed to decrease with the degree of rock exposure to subaerial weathering.</p> <p>The rebound (R) values generated by the Schmidt hammer mirror the rebound velocity of the plunger which was released on the rock surface. Higher R-values are anticipated from freshly exposed rock surfaces. In turn, low R-values are expected from rock surfaces that experienced long exposure <d-cite key="matthews.etal_2013"></d-cite>. Figure 13, R-values versus altitude, shows that R-value is proportional to altitude in the first 6 groups because the end moraine is older than ‘fresh’ moraine. We infer that the last two group’s samples is young since it may be not from moraine but rock falls instead.</p> <p><img src="https://i.imgur.com/QwQeUwC.png" alt=""/> <strong>Figure 13.</strong> The SHD results in the foreland of glacier Storbreen. Each group contains 10 samples. The elevation profile could be found at Figure 3.</p> <h4 id="242-reconstructure-modeling">2.4.2 Reconstructure modeling</h4> <p>The geological evidence from the ice margin (proglacial lakes, ice-dammed lakes, end moraines, esker, meltwater channels), combined with ice flow direction(striae, eskers, drumlins, lineations) and ice-free time (erratics, boulders, bedrocks) can describe a proximate extent of the past ice masses but hardly the ice thickness. The varves from lake sediments were used to infer the pace of the deglaciation (<em>Swedish Time Scale</em>). The field evidences are used to constrain the numerical modeling of the ice sheet.</p> <p><em>Glacial isostatic adjustment (GIA) modeling</em> focuses on the relative sea level change process. As an ice sheet grows and decays, it transfers a shifting load onto Earth’s crust which responds through elastic and visco-plastic deformation. it is possible to separate the effects of eustatic sea level rise (through ice sheet melting) and isostatic rebound, which can then be used to inversely deduce the history of the ice load <d-cite key="stroeven.etal_2015"></d-cite>.</p> <p><em>Ice sheet numerical modeling</em> focus on how the ice reacted to climate change in the past. It turns correct paleoclimate forcing into mass balance over large spatial scales to achieve the ice sheet history of 4D dynamics.</p> <h4 id="243-geophysical-observations-ert-and-boreholes">2.4.3 Geophysical observations: ERT and Boreholes</h4> <p>During the field trip, we visited boreholes (129 m and 20 m) at Juvvasshøe on 1 Sept and used electrical resistivity tomography (ERT) to profile the subsurface resistivity near the second boreholes (Figure 14). The widespread polygon nets in the block field denote the permafrost condition (Figure 10c).</p> <p><img src="https://i.imgur.com/IDnpt3a.png" alt=""/> <strong>Figure 14.</strong> The location of ERT profile and boreholes at Juvvasshøe.</p> <p><strong>ERT</strong></p> <p>The basis of ERT is that the different materials in the ground have different resistivity, thus electrodes set up on the profile have different current measurements. For example, saturated clay has very low resistance and frozen ground or dry blocky layers have very high resistance.</p> <p>Figure 15 shows the profile from 2009 and 2019 with notable differences. The purple and reddish indicate the water content, and from yellow to blue may stand for the presence of the ground ice or just dry blocky cracks. In general, the active layer is 2 to 3 meters deep. Except (a) the ground resistance gets lower (dry), (b), (c) and (d) amply more water content in the 2019 case. <img src="https://i.imgur.com/ftMEa6o.png" alt=""/> <strong>Figure 15.</strong> ERT profile comparison of 2009 and 2022.</p> <p><strong>Boreholes</strong></p> <p>Juvvasshøe borehole site was installed in 1999. We used the data during the period 2008.09.01 to 2019.09.30 in the lab exercise. The mean annual air temperature (MAAT) is -3.63 °C, the mean annual ground surface temperature (MAGST) is -2.76 °C (Figure 16a), and the mean annual temperature at the top of the permafrost (TTOP) is -2.89 °C (Figure 16b). Surface offset is defined as MAGST minus MAAT, and thermal offset is defined as TTOP minus MAGST. The surface offset, 0.84 °C is not significant due to heavy wind in winter and blockfield negative anomaly. The blocky layers have stable thermal conductivity over seasons so the thermal offset is also minimal.</p> <p>The observations and model suggest that the permafrost exists from -2.89 m to &gt; 350 m. The active layer thickness is not yet increase significant, but likely further go down, as a significant positive trend on the ground surface temperature. Figure 16a is not exactly correct because the linear fit was affected by the sampling effect on the edge. <img src="https://i.imgur.com/q7JFzuO.png" alt=""/> <strong>Figure 16.</strong> Juvvasshøe borehole records from 2008 to 2019. (a: Ground surface temperature, b: average temperature curve, c: temperature profile over time, gray is no data)</p> <h2 id="3-deglaciation-concerns">3 Deglaciation concerns</h2> <p>There were not only approximately 40 glacial cycles in Quaternary but also numerous intra-cycle dynamics in the location and extent of basa thermal zones. So it is extremely complex to deblend the deglaciation events. The numerical models combined with the information from paleo-climate, dating, isostatics adjustment, and offshore sediments with geomorphological datasets as constraints to achieve the ice sheet dynamic history. Figure 17 is one example. <img src="https://i.imgur.com/pXvTAgj.png" alt=""/> <strong>Figure 17.</strong> The deglaciation patterns and chronology for the Fennoscandian Ice Sheet <d-cite key="stroeven.etal_2015"></d-cite>.</p> <p>Some details behind the deglaciation event are closely related to today’s challenges. For instance, scientists are worried about the tipping point of the Antarctic Ice Sheet, the Greenland ice sheet melting, and the permafrost carbon stock. The latest reconstruction revealed the story of the collapse of the EISC<d-cite key="brendryen.etal_2020"></d-cite>.</p> <h3 id="31-the-collapse-of-the-eisc">3.1 The collapse of the EISC</h3> <p>During the LGM, The EISC has a sea level equivalent (SLE) ice volume of ~24 m, which is three times nowadays Greenland Ice Sheet. Large marine-based sectors extended to the continental shelf edge, making EISC a marine ice sheet, similar to West Antarctic Ice Sheet.</p> <p>An event known as global Meltwater Pulse 1A (MWP-1A) at the Bølling transition ~14,650 years ago had a sea level rising rate of at least 4 cm/year, 12 m -14 m in ~340 years, which is 10 times of today. The previous study concluded the contribution from EISC is SLE ~2.5m during 14.9-12.9 ky BP <d-cite key="patton.etal_2017"></d-cite>.</p> <p>The new reconstruction attributes up to 50% of meltwater to the collapse of EISC. The peak melting of EISC reached SLE ~2.2 cm/year at centennial scales. The authors estimated that the rates of ice loss from the EISC during the early Bølling are comparable to high-end values of mass loss projected for the West Antarctic Ice Sheet in the next centuries<d-cite key="brendryen.etal_2020"></d-cite>. The collapse of EISC reminds us that sudden deglaciation is not a friendly process but possible even if there was no anthropogenic effect but subtle changes in incoming solar radiation by the Earth’s orbit procession.</p> <h3 id="32-the-thawing-permafrost">3.2 The thawing permafrost</h3> <p>Many periglacial landscapes show the imprint of previous glacial conditions<d-cite key="french_2007"></d-cite>. The widespread thawing of permafrost is a consequence and simultaneous event of deglaciation. Particularly, the peatland (palsa, and polygon mires) exists in regions of discontinuous permafrost, and will not be able to survive soon under the latest projection of the warming trend. For instance, the palsa in southern Norway (~1000 m) and northern Noway (~sea level) locates below the permafrost limit (~1300 m for the south, ~600 for the north)<d-cite key="lilleoren.etal_2012"></d-cite>. In the Finnmark area, the aerial images from the 1950s suggest palsa degradation started as early as the 1950s and decreased 33-71% from the 1950s to the 2010s<d-cite key="borge.etal_2017"></d-cite>.</p> <p>As permafrost is a thermal concept, permafrost loss can be regarded as a function of global warming <d-cite key="chadburn.etal_2017"></d-cite>, which makes the projection of permafrost easier. Figure 18 shows the modern permafrost peatland distributions are expected to shrink. Under Shared Socioeconomic Pathways (SSPs), losses of the suitable climate envelope for palsa/peat plateaus across Europe and Western Siberia by the 2060s of 75% (SSP2-4.5), 81% (SSP3-7.0) and 93% (SPP5-8.5)<d-cite key="fewster.etal_2022"></d-cite>. However, the statistical model does not account for the local variability of the ground thermal regime. Hence it cannot predict the transition lag from MAT to degradation <d-cite key="borge.etal_2017"></d-cite>.</p> <p><img src="https://i.imgur.com/Z0hoH1K.png" alt=""/> <strong>Figure 18.</strong> Permafrost peat carbon approaching a climatic tipping point <d-cite key="fewster.etal_2022"></d-cite>.</p> <h2 id="4-debates">4 Debates</h2> <p>Glaciers as amplifiers of relief incised Earth’s steepest and highest relief, hence, the low, rolling relief of the high plateaus has been regarded as incompatible with a glacial origin. This led to the old debate about the origin of the low-relief plateaus of southern Norway. There are several versions of the debate but the same questions in fact in a more complex context and across more disciplines in:</p> <ul> <li>The thickness of the ice sheet.</li> <li>The exposure age of the Norwegian mountains.</li> <li>The ICE(isostasy-climate-erosion) vs uplift peneplain (Nielsen vs Karna)</li> <li>The offshore sediment budget mismatch (Pedersen vs Japsen)</li> </ul> <p>The classic theory is that plateaus remnants of paleic lowland surface dating back to Tertiary period. <strong>This paleic surface was uplifted and preserved by cold-based ice or as nunatak during glacial periods <d-cite key="olsen.etal_2013a"></d-cite></strong></p> <h3 id="41-nunataks-hypothesis">4.1 Nunataks hypothesis</h3> <p>Nunataks represents the nonglacier surface protrudes through the thin ice sheet (Nesje et al. 1988). Evidence and criticism:</p> <ul> <li>Weathering landforms such as tors (may back to pre-Quaternary) on summit (Dahl 1966, Andre 2004).</li> <li>The finding of soils, such as kaolinite, gibbsite, and weathering soil (saprolite) that originated from pre-Quaternary. <em>But the results are ambiguous because it can also be found in Holocene soils.</em> (e.g., Rea et al. 1996, Marquette et al. 2004).</li> <li>The dating evidence from the west coast. The mountains along the west coast have a higher chance to be nunataks because the deep fjords would efficiently drain the ice and keep the ice surface low. E.g. the mountain of Skåla (1848 m a.s.l) is ice-free, which is supported by trimlines, weathering limits and results of exposure dating (Nesje and Dahl, 1992, Brook et al., 1996, Goehring et al., 2008). Some dating results are even data back to pre-Quaternary times but the results are ambiguous <d-cite key="olsen.etal_2013a"></d-cite>.</li> <li>Implying a thin ice sheet in the inland area, which <em>does not fit</em> with modeling results ( Näslund et al. 2003, Follestad and Fredin 2011).</li> </ul> <h3 id="42-frozen-bed-preservation-hypothesis">4.2 Frozen-bed preservation hypothesis</h3> <p>Sugden (1974) noted the importance of relief and basal temperature in developing different landscapes of glacial erosion. Where ice had remained frozen to its bed, there was hardly any erosion. Where deeper valleys had permitted basal melting and thus sliding, they were deepened further while intervening uplands were unaffected. Kleman and Stroeven (1997) demonstrated the selectivity of glacial erosion in the Swedish mountains. This may explain the origin of low-relief plateaus.</p> <p>Evidence and criticism:</p> <ul> <li>Cold-base theory support even the highest mountain may cover by Ice-sheet. Most of glaciological and isostatic ice sheet models produced an ice surface up to 2000-3000 m a.s.l, which only allow the highest peaks as nunataks<d-cite key="mangerud.etal_2011"></d-cite>. But it also *overestimates paleo-ice-sheet configuration in coastal areas<d-cite key="olsen.etal_2013a"></d-cite>.</li> <li>Some dating case (20.3 ± 0.6 ka ) in Snowhetta area of 1570 a.s.l suggests there was *ice-free peaks in inland area as early as 20-15 ka<d-cite key="lane.etal_2020"></d-cite>. The Blåhø (1617 m a.s.l.) in south-central Norway dating (46.4 ± 1.7 ka) indicates long-term weathering history and suggests low erosive cold-based ice cover during the Last Glacial Maximum shielding it (Philipp et al. 2019).</li> <li>However, the offshore sediments do not match the sequence of the erosion, and the erosion of onshore valleys and fjords can only explain 61% - 66 % of the offshore sink volume <d-cite key="pedersen.etal_2021"></d-cite>. These offshore sediments budgets also criticized by Japsen <d-cite key="japsen.chalmers_2022"></d-cite>.</li> </ul> <h3 id="43-ice-isostasy-climate-erosion-hypothesis">4.3 ICE (isostasy-climate-erosion) hypothesis</h3> <p>The ICE hypothesis<d-cite key="nielsen.etal_2010, nielsen.etal_2009b, nielsen.etal_2009a"></d-cite> ensemble models to explain both erosion problem (the presence of the low relief plateaus) and the offshore sediments problem. The ICE disagrees that there is an old surface neither by nunataks hypotheses nor frozen-bed preservation hypotheses.</p> <p>Evidence and criticism:</p> <ul> <li>Instead, models show that plateaus have been glacially eroded<d-cite key="andersen.etal_2018, pedersen.etal_2021"></d-cite>. The modeling proved that with climate change, the ice sheet got thinner, and for the reasons such as the wavelength of the terrain etc. the cold-based ice sheet kept the low relief surface<d-cite key="egholm.etal_2017a"></d-cite>.</li> <li>Just like the glacier buzzsaw hypothesis, ICE hypothesis highly relies on the relationship between climate and erosion to explain the origin of the flat plateaus. <ul> <li>Glacier erosion uploads the weight -&gt; Isostatic uplift -&gt; more land raised to ELA -&gt; more erosion. And this erosion is more efficient than uplift thus Neogen uplift is not important anymore.</li> </ul> </li> <li>Lidmar (2009)<d-cite key="lidmar-bergstrom.bonow_2009"></d-cite> criticized that ICE addressed too much on climate factor, but ignored the significant fact that there was an uplift in Western Norway during the Neogene. He/she said that instead, they discuss the origin of accordant summits, which are not the relevant landforms for conclusions on recent uplift.</li> </ul> <h2 id="5-summary-of-the-field-trip">5 Summary of the field trip</h2> <p>This field trip and the related lab exercise give a good description of the process from glacial-to-periglacial environments. The connection between the geomorphology process and nowadays society’s concerns are addressed in the introduction. Then, this report reviewed the common definitions, concepts and methodologies in geomorphology and glacial &amp; periglacial environments.</p> <p><img src="https://i.imgur.com/rzYp7VD.jpg" alt=""/> <strong>Figure 19.</strong> The overview map of the field trip</p> <p>The necessary literatures are cited to explain the materials from the field trip. However, except for old debates about ice sheet thickness and/or the paleic surface or the sediment budgets mismatch, there still are several questions that are not clear enough:</p> <ul> <li>Quaternary deposition patterns <d-cite key="olsen.etal_2013"></d-cite>. Why exactly the southeastern area close to or under the ice divide has thick Quaternary deposits? How did the boundary between the scouring areas and the deposit areas form?</li> <li>The age of the palsa. How long it can persist under ‘unsuitable climate conditions? or how long it has persisted? There is no direct correlation between the rate of degradation and increasing MAAT, precipitation or snow depth <d-cite key="borge.etal_2017"></d-cite>, why?</li> <li>The snow-covered shrub branches also cool permafrost by thermal bridging <d-cite key="domine.etal_2022"></d-cite>, acting like the blockfield <d-cite key="juliussen.humlum_2008"></d-cite>?</li> </ul> <p>In summary, it was a fun field trip, covering so many interesting topics, and connecting everything! Many thanks to Henning, Karianne, Bernd, and Martin for guiding us getting through this Ice Age Museum.</p>]]></content><author><name>Zhihao</name></author><category term="notes,"/><category term="geomorphology,"/><category term="glacier,"/><category term="climate,"/><category term="permafrost"/><summary type="html"><![CDATA[The most interesting Quaternary geomorphology story of Norway]]></summary></entry><entry xml:lang="eng"><title type="html">Landscape modeling - erosion vs tectonic uplift</title><link href="https://zhihaol.eu.org/blog/2022/landscape-modeling/" rel="alternate" type="text/html" title="Landscape modeling - erosion vs tectonic uplift"/><published>2022-10-13T00:00:00+00:00</published><updated>2022-10-13T00:00:00+00:00</updated><id>https://zhihaol.eu.org/blog/2022/landscape-modeling</id><content type="html" xml:base="https://zhihaol.eu.org/blog/2022/landscape-modeling/"><![CDATA[<h2 id="1-background">1 Background</h2> <p>There are several classical models describing the formation of the landscape (Figure 1). Some concepts are still used today, such as Peneplain, Pediplain. In this section, we have a short review of these classical theories of large-scale geomorphology.</p> <p><img src="https://i.imgur.com/lU82I9d.png" alt=""/> <strong>Figure 1</strong>. Scheme of Davis (A), Penck (B) and King (C) models</p> <h3 id="davis-model-1899-the-cycle-of-erosion">Davis model (1899): The cycle of erosion</h3> <p><img src="https://i.imgur.com/4v6O3NZ.png" alt=""/> <strong>Figure 2</strong>. Davis model</p> <p>Davis <em>considered landforms evolution as a sequence of stages</em>, like life forms, from young, and mature to old. The young terrain has maximum relief, after the erosion by the river. As the <em>slope decline</em> from V to U shape, the end of the erosion is a flat surface close to base level or sea level, called <strong>peneplain</strong>. And then, new uplift starts a new cycle (Summerfield, 2008).</p> <p>Davis does not explain that landforms under different climates are not identical. Consequently, Davis developed an arid and a glacier version of the cycle of erosion. In the case of limestone terrains, later works develop a specific karst cycle of erosion to explain it.</p> <p>The rate and occurrence of uplift are also one of issues. Davis estimated the formation of peneplain may take 20-200 Ma, which may not exactly be true. Davis’s model is unable to explain the rapid climate changes that happened in the Quaternary when the sea level changed frequently.</p> <h3 id="the-penck-model-1924-uplift-and-denudation-related">The Penck model (1924): uplift and denudation related</h3> <p>The Penck model does not have rapid uplift. But the crustal uplift gets slower when reaches a maximum (slow – fast – slow). The high rate of crustal uplift would raise river channels further above base level and thus increase their gradients, so <em>the faster fluvial downcutting</em>. The converse situation applies during a decline in the rate of uplift, with rates of incision decreasing. Hence, the process could be divided into: • (Fast uplift - Steep slope) Waxing development yields convex valley sides • (Slow uplift - Less steep slope) Waning development yields concave valley sides.</p> <p>Penck model links river erosion with the rate of uplift. However, <em>River downcutting</em> is also related to climate, lithology, and weathering, both of which can significantly affect relationships between stream activity and slope form.</p> <h3 id="the-king-model-1953-pediplanation">The King model (1953): pediplanation</h3> <p>The King model resembles Davis’s and also has uplift, young, mature, and old stages, but assuming the uplift is episodic and rapid in comparison with rates of denudation (Summerfield, 2008).</p> <ul> <li>The slope development is different. <ul> <li>The slope at an angle of 6-7 degrees would keep stable, call it <em>pediment</em>.</li> <li><em>Parallel retreat</em>: the pediment increase in size due to <em>backward erosion</em> in backwall.</li> <li><em>Pediplains</em>: The Pediment joins with other pediments to form pediplains.</li> </ul> </li> </ul> <p><img src="https://i.imgur.com/4E7hQHi.jpg" alt="Figure: the clasic theory of slope development: How valley gets wider"/> <strong>Figure 3</strong>. Slope development in different classical models</p> <h2 id="2-lab-exercise">2 Lab exercise</h2> <p>In our lab exercise, we use the Simple Integrated Geomorphological Numerical Model (SIGNUM) to simulate the evolution of the landscape, which is TIN-based model written in Matlab.</p> <h3 id="the-numerical-euqations">The numerical euqations</h3> <p>The process of surface height change at each iteration are computed by a series of geomorphic transport laws (GTL), namely diffusion, channeling and uplift (Chen et al., 2014).</p> <p>The diffusion GTL:</p> \[\frac{\delta_z}{\delta_t} = k_d \triangledown^2z\] <p>Where k_d is a diffusion parameter, and surface curvature is ∇.</p> <p>The channeling GTL:</p> \[\frac{\delta_z}{\delta_t} = k_c A^m\triangledown_z^n\] <p>Where k_c is streampower parameter, m, n are parameters as well, and A is contribution area.</p> <p>The uplift GTL:</p> \[\frac{\delta_z}{\delta_t} = u_f\] <p>Where u_f is the rate of uplifting.</p> <h3 id="the-study-area">The study area</h3> <p><img src="https://i.imgur.com/Jtv0fAq.jpg" alt=""/> <strong>Figure 4</strong>. Alluvial streams, Danxia, Zhangye, China (39.1 N 099.9 E ).</p> <p>Figure 4 shows an alluvial stream plain getting most of its water and sediments from the surrounding mountainn glaciers or snow cover (2200 - 2600 m a.m.s.l). Alluvium is deposited as the stream fans out on a flat plain (1600 -1800 m a.m.s.l).</p> <p>As SIGNUM does not have deposit GTL, hence, the simulation aims to simulate the mountains instead.</p> <h3 id="the-sensitivity-test-and-results">The sensitivity test and results</h3> <p>In simulations, a 20 km * 20 km square area starts uplifting, erosion and diffusion from a <strong>peneplain</strong> at sea level. A cycle of 100 thousand years later, we get the results. The outlet is defined as line x=0.</p> <p>I use an iteration to approach the target terrain (Figure 4) by adjusting the parameters in each run (Table 1). <strong>Run 1, Run 2 and Run 3 are my sensitivity tes</strong>t, where I found that the 2x erosion and 2x uplift coefficient show that the erosion is more progressive (river reaches inland further, run 3), and the uplift also makes the mountain higher (Run 2). The diffusion parameter does not have that significant impact on result compared to erosion and uplift parameters (Run 3b is almost as same as Run 3)</p> <p><strong>Table 1.</strong> The parameters. Run 1,2,3 are sensitivity test, and space = 250 m.</p> <table> <thead> <tr> <th>Runs</th> <th>Kd</th> <th>Kc</th> <th>mc</th> <th>nc</th> <th>Uf</th> <th>comments</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>5e-3</td> <td>1e-4</td> <td>0.5</td> <td>1</td> <td>1e-3</td> <td>Sensitivity test</td> </tr> <tr> <td>2</td> <td>5e-3</td> <td>1e-4</td> <td>0.5</td> <td>1</td> <td>2e-3</td> <td>Sensitivity test: faster uplift</td> </tr> <tr> <td>3</td> <td>5e-3</td> <td>2e-4</td> <td>0.5</td> <td>1</td> <td>2e-3</td> <td>Sensitivity test: faster erosion and uplift</td> </tr> <tr> <td>3b</td> <td>exp(-X\space\50)5e-3</td> <td>2e-4</td> <td>0.5</td> <td>1</td> <td>2e-3</td> <td>Sensitivity test: Diffusion west</td> </tr> <tr> <td>4</td> <td>exp(-X\space\50)5e-3</td> <td>2e-4</td> <td>0.5</td> <td>1</td> <td>exp(X\space \50)2e-3</td> <td>diffusion west, uplift east</td> </tr> <tr> <td>5</td> <td>5e-3</td> <td>exp(-X\space\30)5e-3</td> <td>0.5</td> <td>1</td> <td>exp(X\space \50)2e-3</td> <td>erosion west, uplift east</td> </tr> <tr> <td>6</td> <td>exp(-X\space \50)5e-3</td> <td>exp(-X\space\60)5e-3</td> <td>0.5</td> <td>1</td> <td>exp(X\space \50)2e-3</td> <td>diffusion, erosion west, uplift east</td> </tr> </tbody> </table> <p>Run 4 introduces an exponential function that reduces diffusion and enhances uplift at the East side (x close to 20km), but enhances diffusion and reduces uplift at the west side (x close to 0). We can regard this function as a condition that the east side tectonic is more active and lithology has higher fracture resistance. The mountain reaches over 350 m, which is similar to my study area.</p> <p>If there is less river down-cutting on the east, the east mountain is as high as 900 m (Run 5). Or, there is more river down-cutting, more diffusion on the west, the east mountain is getting steeper (Run 6). In summary, I prefer the result of run 4, which resembles Figure 2 at most. And run 5 and run 7 show that we can simulate the slope development by adjusting parameters.</p> <p><img src="https://i.imgur.com/bN42Dah.png" alt=""/> <strong>Figure 4</strong>. The results</p> <p>In this exercise, I noticed that there are several issues with SIGNUM:</p> <ul> <li>There is no deposit process. Hence, I cannot simulate the formation of the alluvial plain, so does the aeolian landform.</li> <li>The fluvial erosion is a fixed number or with a little variation by a self-define function. In the real world, precipitation and the river channel are highly related to climate and topography.</li> <li>Lithology is also a big issue. If could be better if we define a Kd and Kc matrix, however there is probably a different and complicated mechanism in some areas, for example, limestone terrains.</li> <li>There is no glacial erosion process.</li> </ul> <p><strong>References</strong></p> <ul> <li>Chen, A., Darbon, J., &amp; Morel, J.-M. (2014). Landscape evolution models: A review of their fundamental equations. <em>Geomorphology</em>, <em>219</em>, 68–86. https://doi.org/10.1016/j.geomorph.2014.04.037</li> <li>Refice, A., Giachetta, E., &amp; Capolongo, D. (2012). SIGNUM: A Matlab, TIN-based landscape evolution model. <em>Computers &amp; Geosciences</em>, <em>45</em>, 293–303. https://doi.org/10.1016/j.cageo.2011.11.013</li> <li>Summerfield, M. A. (2008). <em>Global geomorphology: An introduction to the study of landforms</em> (Nachdr.). Pearson, Prentice Hall.</li> </ul>]]></content><author><name>Zhihao</name></author><category term="geomorphology"/><category term="notes"/><summary type="html"><![CDATA[large scale of geomorphology]]></summary></entry></feed>